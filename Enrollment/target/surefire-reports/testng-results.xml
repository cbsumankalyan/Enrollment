<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="22" ignored="12" total="89" passed="55">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="18607785" started-at="2021-01-21T16:40:09Z" finished-at="2021-01-21T21:50:16Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="18607785" started-at="2021-01-21T16:40:09Z" finished-at="2021-01-21T21:50:16Z">
      <class name="Tests.Fit">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@4501b7af]" name="PreConditon" is-config="true" duration-ms="6333" started-at="2021-01-21T21:14:42Z" finished-at="2021-01-21T21:14:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af]" name="GetFit" duration-ms="128104" started-at="2021-01-21T21:14:48Z" data-provider="MarketConfig" finished-at="2021-01-21T21:16:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United Kingdom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@4501b7af]" name="PostCondition" is-config="true" duration-ms="675" started-at="2021-01-21T21:16:56Z" finished-at="2021-01-21T21:16:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=SUCCESS method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@4501b7af]" name="PreConditon" is-config="true" duration-ms="6003" started-at="2021-01-21T21:16:57Z" finished-at="2021-01-21T21:17:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af]" name="GetFit" duration-ms="165564" started-at="2021-01-21T21:17:03Z" data-provider="MarketConfig" finished-at="2021-01-21T21:19:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@4501b7af]" name="PostCondition" is-config="true" duration-ms="687" started-at="2021-01-21T21:19:48Z" finished-at="2021-01-21T21:19:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=SUCCESS method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@4501b7af]" name="PreConditon" is-config="true" duration-ms="6650" started-at="2021-01-21T21:19:49Z" finished-at="2021-01-21T21:19:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af]" name="GetFit" duration-ms="122618" started-at="2021-01-21T21:19:56Z" data-provider="MarketConfig" finished-at="2021-01-21T21:21:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.GetFitOrderSubmit(SummaryPage.java:2644)
at Pages.Summary.GetFitSummaryDetails(Summary.java:24)
at Tests.Fit.GetFit(Fit.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@4501b7af]" name="PostCondition" is-config="true" duration-ms="994" started-at="2021-01-21T21:21:58Z" finished-at="2021-01-21T21:21:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=FAILURE method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@4501b7af]" name="PreConditon" is-config="true" duration-ms="5680" started-at="2021-01-21T21:21:59Z" finished-at="2021-01-21T21:22:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af]" name="GetFit" duration-ms="123994" started-at="2021-01-21T21:22:05Z" data-provider="MarketConfig" finished-at="2021-01-21T21:24:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.GetFitOrderSubmit(SummaryPage.java:2644)
at Pages.Summary.GetFitSummaryDetails(Summary.java:24)
at Tests.Fit.GetFit(Fit.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@4501b7af]" name="PostCondition" is-config="true" duration-ms="982" started-at="2021-01-21T21:24:09Z" finished-at="2021-01-21T21:24:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=FAILURE method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@4501b7af]" name="PreConditon" is-config="true" duration-ms="7146" started-at="2021-01-21T21:24:10Z" finished-at="2021-01-21T21:24:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af]" name="GetFit" duration-ms="174201" started-at="2021-01-21T21:24:17Z" data-provider="MarketConfig" finished-at="2021-01-21T21:27:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@4501b7af]" name="PostCondition" is-config="true" duration-ms="695" started-at="2021-01-21T21:27:11Z" finished-at="2021-01-21T21:27:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=SUCCESS method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.Fit -->
      <class name="Tests.PrefferedCustomer">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6242" started-at="2021-01-21T20:39:44Z" finished-at="2021-01-21T20:39:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="259339" started-at="2021-01-21T20:39:50Z" data-provider="MarketConfig" finished-at="2021-01-21T20:44:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bahamas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-01-21T20:44:09Z" finished-at="2021-01-21T20:44:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="5527" started-at="2021-01-21T20:44:10Z" finished-at="2021-01-21T20:44:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="198085" started-at="2021-01-21T20:44:16Z" data-provider="MarketConfig" finished-at="2021-01-21T20:47:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:2050)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="1028" started-at="2021-01-21T20:47:34Z" finished-at="2021-01-21T20:47:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6624" started-at="2021-01-21T20:47:35Z" finished-at="2021-01-21T20:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="189259" started-at="2021-01-21T20:47:41Z" data-provider="MarketConfig" finished-at="2021-01-21T20:50:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:2050)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="1072" started-at="2021-01-21T20:50:51Z" finished-at="2021-01-21T20:50:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="5736" started-at="2021-01-21T20:50:52Z" finished-at="2021-01-21T20:50:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="46575" started-at="2021-01-21T20:50:57Z" data-provider="MarketConfig" finished-at="2021-01-21T20:51:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Colombia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.PCAdditionalProducts(InitialOrderPage.java:965)
at Pages.InitialOrder.PCPacksChecking(InitialOrder.java:17)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="907" started-at="2021-01-21T20:51:44Z" finished-at="2021-01-21T20:51:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="5733" started-at="2021-01-21T20:51:45Z" finished-at="2021-01-21T20:51:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="216570" started-at="2021-01-21T20:51:51Z" data-provider="MarketConfig" finished-at="2021-01-21T20:55:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dominican Republic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to no longer be visible: By.xpath: (//img[@src='assets/img/ajax-loader.gif'])[1] (tried for 200 second(s) with 500 MILLISECONDS interval)
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: 0019869adb46388e2522d373667e0f7c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to no longer be visible: By.xpath: (//img[@src='assets/img/ajax-loader.gif'])[1] (tried for 200 second(s) with 500 MILLISECONDS interval)
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: 0019869adb46388e2522d373667e0f7c
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:82)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at POM.InitialOrderPage.PCPacks(InitialOrderPage.java:794)
at Pages.InitialOrder.PCPacksChecking(InitialOrder.java:16)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="1039" started-at="2021-01-21T20:55:27Z" finished-at="2021-01-21T20:55:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="5938" started-at="2021-01-21T20:55:28Z" finished-at="2021-01-21T20:55:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="179944" started-at="2021-01-21T20:55:34Z" data-provider="MarketConfig" finished-at="2021-01-21T20:58:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mexico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="719" started-at="2021-01-21T20:58:34Z" finished-at="2021-01-21T20:58:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="5429" started-at="2021-01-21T20:58:35Z" finished-at="2021-01-21T20:58:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="210788" started-at="2021-01-21T20:58:40Z" data-provider="MarketConfig" finished-at="2021-01-21T21:02:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="766" started-at="2021-01-21T21:02:11Z" finished-at="2021-01-21T21:02:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6201" started-at="2021-01-21T21:02:12Z" finished-at="2021-01-21T21:02:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="208655" started-at="2021-01-21T21:02:18Z" data-provider="MarketConfig" finished-at="2021-01-21T21:05:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T21:05:47Z" finished-at="2021-01-21T21:05:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6387" started-at="2021-01-21T21:05:47Z" finished-at="2021-01-21T21:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="277336" started-at="2021-01-21T21:05:54Z" data-provider="MarketConfig" finished-at="2021-01-21T21:10:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T21:10:31Z" finished-at="2021-01-21T21:10:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6281" started-at="2021-01-21T21:10:32Z" finished-at="2021-01-21T21:10:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="242909" started-at="2021-01-21T21:10:38Z" data-provider="MarketConfig" finished-at="2021-01-21T21:14:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="735" started-at="2021-01-21T21:14:41Z" finished-at="2021-01-21T21:14:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.PrefferedCustomer -->
      <class name="Tests.PatientPortal">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@523884b2]" name="PreConditon" is-config="true" duration-ms="6764" started-at="2021-01-21T21:27:12Z" finished-at="2021-01-21T21:27:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2]" name="Patient" duration-ms="237851" started-at="2021-01-21T21:27:19Z" data-provider="MarketConfig" finished-at="2021-01-21T21:31:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@523884b2]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T21:31:17Z" finished-at="2021-01-21T21:31:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=SUCCESS method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@523884b2]" name="PreConditon" is-config="true" duration-ms="6171" started-at="2021-01-21T21:31:18Z" finished-at="2021-01-21T21:31:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2]" name="Patient" duration-ms="256887" started-at="2021-01-21T21:31:24Z" data-provider="MarketConfig" finished-at="2021-01-21T21:35:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@523884b2]" name="PostCondition" is-config="true" duration-ms="753" started-at="2021-01-21T21:35:41Z" finished-at="2021-01-21T21:35:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=SUCCESS method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@523884b2]" name="PreConditon" is-config="true" duration-ms="6800" started-at="2021-01-21T21:35:41Z" finished-at="2021-01-21T21:35:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2]" name="Patient" duration-ms="173756" started-at="2021-01-21T21:35:48Z" data-provider="MarketConfig" finished-at="2021-01-21T21:38:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:2050)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PatientPortal.Patient(PatientPortal.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@523884b2]" name="PostCondition" is-config="true" duration-ms="1012" started-at="2021-01-21T21:38:42Z" finished-at="2021-01-21T21:38:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=FAILURE method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@523884b2]" name="PreConditon" is-config="true" duration-ms="6840" started-at="2021-01-21T21:38:43Z" finished-at="2021-01-21T21:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2]" name="Patient" duration-ms="175240" started-at="2021-01-21T21:38:50Z" data-provider="MarketConfig" finished-at="2021-01-21T21:41:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:2050)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PatientPortal.Patient(PatientPortal.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@523884b2]" name="PostCondition" is-config="true" duration-ms="1022" started-at="2021-01-21T21:41:45Z" finished-at="2021-01-21T21:41:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=FAILURE method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.PatientPortal -->
      <class name="Tests.ReferralIDPassing">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.ReferralIDPassing@d8355a8]" name="PreConditon" is-config="true" duration-ms="7116" started-at="2021-01-21T20:28:24Z" finished-at="2021-01-21T20:28:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@d8355a8]" name="PassReferralID" duration-ms="292824" started-at="2021-01-21T20:28:31Z" data-provider="MarketConfig" finished-at="2021-01-21T20:33:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.ReferralIDPassing@d8355a8]" name="PostCondition" is-config="true" duration-ms="720" started-at="2021-01-21T20:33:24Z" finished-at="2021-01-21T20:33:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=SUCCESS method=ReferralIDPassing.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.ReferralIDPassing@d8355a8]" name="PreConditon" is-config="true" duration-ms="9327" started-at="2021-01-21T20:33:25Z" finished-at="2021-01-21T20:33:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@d8355a8]" name="PassReferralID" duration-ms="280224" started-at="2021-01-21T20:33:34Z" data-provider="MarketConfig" finished-at="2021-01-21T20:38:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.ReferralIDPassing@d8355a8]" name="PostCondition" is-config="true" duration-ms="738" started-at="2021-01-21T20:38:14Z" finished-at="2021-01-21T20:38:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=SUCCESS method=ReferralIDPassing.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.ReferralIDPassing -->
      <class name="Tests.FranchisePartner">
        <test-method status="PASS" signature="StartReport()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="StartReport" is-config="true" duration-ms="125" started-at="2021-01-21T16:40:09Z" finished-at="2021-01-21T16:40:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartReport -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="9001" started-at="2021-01-21T16:40:09Z" finished-at="2021-01-21T16:40:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="285086" started-at="2021-01-21T16:40:18Z" data-provider="MarketConfig" finished-at="2021-01-21T16:45:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="783" started-at="2021-01-21T16:45:03Z" finished-at="2021-01-21T16:45:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6051" started-at="2021-01-21T16:45:04Z" finished-at="2021-01-21T16:45:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="283560" started-at="2021-01-21T16:45:10Z" data-provider="MarketConfig" finished-at="2021-01-21T16:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T16:49:53Z" finished-at="2021-01-21T16:49:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6912" started-at="2021-01-21T16:49:54Z" finished-at="2021-01-21T16:50:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="329357" started-at="2021-01-21T16:50:01Z" data-provider="MarketConfig" finished-at="2021-01-21T16:55:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bahamas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="766" started-at="2021-01-21T16:55:30Z" finished-at="2021-01-21T16:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="5458" started-at="2021-01-21T16:55:31Z" finished-at="2021-01-21T16:55:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="230899" started-at="2021-01-21T16:55:37Z" data-provider="MarketConfig" finished-at="2021-01-21T16:59:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to no longer be visible: By.xpath: (//img[@src='assets/img/ajax-loader.gif'])[1] (tried for 200 second(s) with 500 MILLISECONDS interval)
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: ef194d20a8d533ce8abec77f38d0077b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to no longer be visible: By.xpath: (//img[@src='assets/img/ajax-loader.gif'])[1] (tried for 200 second(s) with 500 MILLISECONDS interval)
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: ef194d20a8d533ce8abec77f38d0077b
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:82)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at POM.InitialOrderPage.Packs(InitialOrderPage.java:257)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:10)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:257)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="1004" started-at="2021-01-21T16:59:27Z" finished-at="2021-01-21T16:59:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6273" started-at="2021-01-21T16:59:28Z" finished-at="2021-01-21T16:59:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="319746" started-at="2021-01-21T16:59:35Z" data-provider="MarketConfig" finished-at="2021-01-21T17:04:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="767" started-at="2021-01-21T17:04:55Z" finished-at="2021-01-21T17:04:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="5966" started-at="2021-01-21T17:04:55Z" finished-at="2021-01-21T17:05:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="316600" started-at="2021-01-21T17:05:01Z" data-provider="MarketConfig" finished-at="2021-01-21T17:10:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="797" started-at="2021-01-21T17:10:18Z" finished-at="2021-01-21T17:10:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6268" started-at="2021-01-21T17:10:19Z" finished-at="2021-01-21T17:10:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="91654" started-at="2021-01-21T17:10:25Z" data-provider="MarketConfig" finished-at="2021-01-21T17:11:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Customization error]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Customization error
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.Packs(InitialOrderPage.java:420)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:10)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:257)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="952" started-at="2021-01-21T17:11:57Z" finished-at="2021-01-21T17:11:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6278" started-at="2021-01-21T17:11:58Z" finished-at="2021-01-21T17:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="91632" started-at="2021-01-21T17:12:04Z" data-provider="MarketConfig" finished-at="2021-01-21T17:13:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Customization error]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Customization error
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.Packs(InitialOrderPage.java:420)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:10)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:257)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="949" started-at="2021-01-21T17:13:35Z" finished-at="2021-01-21T17:13:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6975" started-at="2021-01-21T17:13:36Z" finished-at="2021-01-21T17:13:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="251047" started-at="2021-01-21T17:13:43Z" data-provider="MarketConfig" finished-at="2021-01-21T17:17:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Colombia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'col-xs-5 text-right')])[5]"}
  (Session info: chrome=87.0.4280.141)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: 18e8adf804321b0cff4786aeff9291de
*** Element info: {Using=xpath, value=(//div[contains(@class,'col-xs-5 text-right')])[5]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'col-xs-5 text-right')])[5]"}
  (Session info: chrome=87.0.4280.141)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: 18e8adf804321b0cff4786aeff9291de
*** Element info: {Using=xpath, value=(//div[contains(@class,'col-xs-5 text-right')])[5]}
at sun.reflect.GeneratedConstructorAccessor58.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.getText(Unknown Source)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:399)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:261)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="1044" started-at="2021-01-21T17:17:54Z" finished-at="2021-01-21T17:17:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6189" started-at="2021-01-21T17:17:55Z" finished-at="2021-01-21T17:18:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="289457" started-at="2021-01-21T17:18:02Z" data-provider="MarketConfig" finished-at="2021-01-21T17:22:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Denmark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="781" started-at="2021-01-21T17:22:51Z" finished-at="2021-01-21T17:22:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6474" started-at="2021-01-21T17:22:52Z" finished-at="2021-01-21T17:22:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="285303" started-at="2021-01-21T17:22:58Z" data-provider="MarketConfig" finished-at="2021-01-21T17:27:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Denmark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Danish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="766" started-at="2021-01-21T17:27:44Z" finished-at="2021-01-21T17:27:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6076" started-at="2021-01-21T17:27:44Z" finished-at="2021-01-21T17:27:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="342714" started-at="2021-01-21T17:27:50Z" data-provider="MarketConfig" finished-at="2021-01-21T17:33:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dominican Republic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T17:33:33Z" finished-at="2021-01-21T17:33:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6945" started-at="2021-01-21T17:33:34Z" finished-at="2021-01-21T17:33:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="292819" started-at="2021-01-21T17:33:41Z" data-provider="MarketConfig" finished-at="2021-01-21T17:38:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="765" started-at="2021-01-21T17:38:34Z" finished-at="2021-01-21T17:38:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="9072" started-at="2021-01-21T17:38:34Z" finished-at="2021-01-21T17:38:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="309696" started-at="2021-01-21T17:38:44Z" data-provider="MarketConfig" finished-at="2021-01-21T17:43:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T17:43:53Z" finished-at="2021-01-21T17:43:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="5966" started-at="2021-01-21T17:43:54Z" finished-at="2021-01-21T17:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="273396" started-at="2021-01-21T17:44:00Z" data-provider="MarketConfig" finished-at="2021-01-21T17:48:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T17:48:33Z" finished-at="2021-01-21T17:48:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="5772" started-at="2021-01-21T17:48:34Z" finished-at="2021-01-21T17:48:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="302544" started-at="2021-01-21T17:48:40Z" data-provider="MarketConfig" finished-at="2021-01-21T17:53:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="781" started-at="2021-01-21T17:53:42Z" finished-at="2021-01-21T17:53:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="7298" started-at="2021-01-21T17:53:43Z" finished-at="2021-01-21T17:53:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="305047" started-at="2021-01-21T17:53:51Z" data-provider="MarketConfig" finished-at="2021-01-21T17:58:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hungary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T17:58:56Z" finished-at="2021-01-21T17:58:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6902" started-at="2021-01-21T17:58:56Z" finished-at="2021-01-21T17:59:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="313837" started-at="2021-01-21T17:59:03Z" data-provider="MarketConfig" finished-at="2021-01-21T18:04:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hungary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hungarian]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="766" started-at="2021-01-21T18:04:17Z" finished-at="2021-01-21T18:04:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6599" started-at="2021-01-21T18:04:18Z" finished-at="2021-01-21T18:04:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="109632" started-at="2021-01-21T18:04:24Z" data-provider="MarketConfig" finished-at="2021-01-21T18:06:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="672" started-at="2021-01-21T18:06:14Z" finished-at="2021-01-21T18:06:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6094" started-at="2021-01-21T18:06:15Z" finished-at="2021-01-21T18:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="270334" started-at="2021-01-21T18:06:21Z" data-provider="MarketConfig" finished-at="2021-01-21T18:10:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Italiano]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="751" started-at="2021-01-21T18:10:51Z" finished-at="2021-01-21T18:10:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="5568" started-at="2021-01-21T18:10:52Z" finished-at="2021-01-21T18:10:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="279584" started-at="2021-01-21T18:10:57Z" data-provider="MarketConfig" finished-at="2021-01-21T18:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="765" started-at="2021-01-21T18:15:37Z" finished-at="2021-01-21T18:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="7072" started-at="2021-01-21T18:15:38Z" finished-at="2021-01-21T18:15:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="80221" started-at="2021-01-21T18:15:45Z" data-provider="MarketConfig" finished-at="2021-01-21T18:17:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ireland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//li[contains(@class, 'businesspack')]//p//span)[1]"}
  (Session info: chrome=87.0.4280.141)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: e888df1a4857af735adb3995060f1468
*** Element info: {Using=xpath, value=(//li[contains(@class, 'businesspack')]//p//span)[1]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//li[contains(@class, 'businesspack')]//p//span)[1]"}
  (Session info: chrome=87.0.4280.141)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: e888df1a4857af735adb3995060f1468
*** Element info: {Using=xpath, value=(//li[contains(@class, 'businesspack')]//p//span)[1]}
at sun.reflect.GeneratedConstructorAccessor58.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.getText(Unknown Source)
at POM.InitialOrderPage.Packs(InitialOrderPage.java:322)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:10)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:257)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="989" started-at="2021-01-21T18:17:05Z" finished-at="2021-01-21T18:17:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6313" started-at="2021-01-21T18:17:06Z" finished-at="2021-01-21T18:17:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="331935" started-at="2021-01-21T18:17:12Z" data-provider="MarketConfig" finished-at="2021-01-21T18:22:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jamaica]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="766" started-at="2021-01-21T18:22:44Z" finished-at="2021-01-21T18:22:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6185" started-at="2021-01-21T18:22:45Z" finished-at="2021-01-21T18:22:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="323901" started-at="2021-01-21T18:22:51Z" data-provider="MarketConfig" finished-at="2021-01-21T18:28:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="751" started-at="2021-01-21T18:28:15Z" finished-at="2021-01-21T18:28:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6728" started-at="2021-01-21T18:28:16Z" finished-at="2021-01-21T18:28:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="308353" started-at="2021-01-21T18:28:23Z" data-provider="MarketConfig" finished-at="2021-01-21T18:33:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="783" started-at="2021-01-21T18:33:31Z" finished-at="2021-01-21T18:33:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6087" started-at="2021-01-21T18:33:32Z" finished-at="2021-01-21T18:33:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="310773" started-at="2021-01-21T18:33:38Z" data-provider="MarketConfig" finished-at="2021-01-21T18:38:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T18:38:49Z" finished-at="2021-01-21T18:38:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="7367" started-at="2021-01-21T18:38:49Z" finished-at="2021-01-21T18:38:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="288385" started-at="2021-01-21T18:38:57Z" data-provider="MarketConfig" finished-at="2021-01-21T18:43:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mexico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="797" started-at="2021-01-21T18:43:45Z" finished-at="2021-01-21T18:43:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="5433" started-at="2021-01-21T18:43:46Z" finished-at="2021-01-21T18:43:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="322472" started-at="2021-01-21T18:43:51Z" data-provider="MarketConfig" finished-at="2021-01-21T18:49:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="735" started-at="2021-01-21T18:49:14Z" finished-at="2021-01-21T18:49:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6225" started-at="2021-01-21T18:49:15Z" finished-at="2021-01-21T18:49:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="337419" started-at="2021-01-21T18:49:21Z" data-provider="MarketConfig" finished-at="2021-01-21T18:54:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="734" started-at="2021-01-21T18:54:58Z" finished-at="2021-01-21T18:54:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6422" started-at="2021-01-21T18:54:59Z" finished-at="2021-01-21T18:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="88106" started-at="2021-01-21T18:55:05Z" data-provider="MarketConfig" finished-at="2021-01-21T18:56:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//li[contains(@class, 'businesspack')]//p//span)[1]"}
  (Session info: chrome=87.0.4280.141)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: e1cd692d227271c99b7b7e395d0ea08d
*** Element info: {Using=xpath, value=(//li[contains(@class, 'businesspack')]//p//span)[1]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//li[contains(@class, 'businesspack')]//p//span)[1]"}
  (Session info: chrome=87.0.4280.141)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: e1cd692d227271c99b7b7e395d0ea08d
*** Element info: {Using=xpath, value=(//li[contains(@class, 'businesspack')]//p//span)[1]}
at sun.reflect.GeneratedConstructorAccessor58.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.getText(Unknown Source)
at POM.InitialOrderPage.Packs(InitialOrderPage.java:322)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:10)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:257)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="986" started-at="2021-01-21T18:56:34Z" finished-at="2021-01-21T18:56:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6601" started-at="2021-01-21T18:56:35Z" finished-at="2021-01-21T18:56:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="79373" started-at="2021-01-21T18:56:41Z" data-provider="MarketConfig" finished-at="2021-01-21T18:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major NOPack Click Here]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major NOPack Click Here
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:783)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:257)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="980" started-at="2021-01-21T18:58:00Z" finished-at="2021-01-21T18:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6512" started-at="2021-01-21T18:58:01Z" finished-at="2021-01-21T18:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="77865" started-at="2021-01-21T18:58:08Z" data-provider="MarketConfig" finished-at="2021-01-21T18:59:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Norwegian]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//li[contains(@class, 'businesspack')]//p//span)[1]"}
  (Session info: chrome=87.0.4280.141)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: 5caca37aa2b40f4e98a09d6fec18c434
*** Element info: {Using=xpath, value=(//li[contains(@class, 'businesspack')]//p//span)[1]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//li[contains(@class, 'businesspack')]//p//span)[1]"}
  (Session info: chrome=87.0.4280.141)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: 5caca37aa2b40f4e98a09d6fec18c434
*** Element info: {Using=xpath, value=(//li[contains(@class, 'businesspack')]//p//span)[1]}
at sun.reflect.GeneratedConstructorAccessor58.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.getText(Unknown Source)
at POM.InitialOrderPage.Packs(InitialOrderPage.java:322)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:10)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:257)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="966" started-at="2021-01-21T18:59:26Z" finished-at="2021-01-21T18:59:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="5239" started-at="2021-01-21T18:59:27Z" finished-at="2021-01-21T18:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="257358" started-at="2021-01-21T18:59:32Z" data-provider="MarketConfig" finished-at="2021-01-21T19:03:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Poland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T19:03:49Z" finished-at="2021-01-21T19:03:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="7333" started-at="2021-01-21T19:03:50Z" finished-at="2021-01-21T19:03:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="251671" started-at="2021-01-21T19:03:57Z" data-provider="MarketConfig" finished-at="2021-01-21T19:08:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Poland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Polish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="734" started-at="2021-01-21T19:08:09Z" finished-at="2021-01-21T19:08:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="5849" started-at="2021-01-21T19:08:10Z" finished-at="2021-01-21T19:08:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="228362" started-at="2021-01-21T19:08:16Z" data-provider="MarketConfig" finished-at="2021-01-21T19:12:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=87.0.4280.141)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: 4364d5f80918f273a305dc9a4e7675d7]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=87.0.4280.141)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\sumancb\AppData\Lo...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.141, webStorageEnabled: true}
Session ID: 4364d5f80918f273a305dc9a4e7675d7
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
at POM.PaymentPage.ShippingDetails(PaymentPage.java:688)
at Pages.Payment.PaymentDetails(Payment.java:15)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:260)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="1061" started-at="2021-01-21T19:12:04Z" finished-at="2021-01-21T19:12:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6715" started-at="2021-01-21T19:12:05Z" finished-at="2021-01-21T19:12:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="298872" started-at="2021-01-21T19:12:12Z" data-provider="MarketConfig" finished-at="2021-01-21T19:17:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T19:17:11Z" finished-at="2021-01-21T19:17:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6426" started-at="2021-01-21T19:17:12Z" finished-at="2021-01-21T19:17:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="328107" started-at="2021-01-21T19:17:18Z" data-provider="MarketConfig" finished-at="2021-01-21T19:22:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sweden]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Svenska]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="766" started-at="2021-01-21T19:22:46Z" finished-at="2021-01-21T19:22:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="7412" started-at="2021-01-21T19:22:47Z" finished-at="2021-01-21T19:22:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="315761" started-at="2021-01-21T19:22:54Z" data-provider="MarketConfig" finished-at="2021-01-21T19:28:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sweden]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="781" started-at="2021-01-21T19:28:10Z" finished-at="2021-01-21T19:28:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="7382" started-at="2021-01-21T19:28:11Z" finished-at="2021-01-21T19:28:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="332884" started-at="2021-01-21T19:28:18Z" data-provider="MarketConfig" finished-at="2021-01-21T19:33:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="780" started-at="2021-01-21T19:33:51Z" finished-at="2021-01-21T19:33:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6015" started-at="2021-01-21T19:33:52Z" finished-at="2021-01-21T19:33:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="333940" started-at="2021-01-21T19:33:58Z" data-provider="MarketConfig" finished-at="2021-01-21T19:39:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="781" started-at="2021-01-21T19:39:32Z" finished-at="2021-01-21T19:39:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6620" started-at="2021-01-21T19:39:33Z" finished-at="2021-01-21T19:39:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="324183" started-at="2021-01-21T19:39:39Z" data-provider="MarketConfig" finished-at="2021-01-21T19:45:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="797" started-at="2021-01-21T19:45:03Z" finished-at="2021-01-21T19:45:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="7394" started-at="2021-01-21T19:45:04Z" finished-at="2021-01-21T19:45:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="327716" started-at="2021-01-21T19:45:12Z" data-provider="MarketConfig" finished-at="2021-01-21T19:50:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Italiano]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T19:50:39Z" finished-at="2021-01-21T19:50:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="7037" started-at="2021-01-21T19:50:40Z" finished-at="2021-01-21T19:50:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="298126" started-at="2021-01-21T19:50:47Z" data-provider="MarketConfig" finished-at="2021-01-21T19:55:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="812" started-at="2021-01-21T19:55:45Z" finished-at="2021-01-21T19:55:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6738" started-at="2021-01-21T19:55:46Z" finished-at="2021-01-21T19:55:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="276732" started-at="2021-01-21T19:55:53Z" data-provider="MarketConfig" finished-at="2021-01-21T20:00:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-01-21T20:00:29Z" finished-at="2021-01-21T20:00:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6818" started-at="2021-01-21T20:00:30Z" finished-at="2021-01-21T20:00:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="352846" started-at="2021-01-21T20:00:37Z" data-provider="MarketConfig" finished-at="2021-01-21T20:06:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="781" started-at="2021-01-21T20:06:30Z" finished-at="2021-01-21T20:06:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="7029" started-at="2021-01-21T20:06:31Z" finished-at="2021-01-21T20:06:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="341389" started-at="2021-01-21T20:06:38Z" data-provider="MarketConfig" finished-at="2021-01-21T20:12:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="766" started-at="2021-01-21T20:12:19Z" finished-at="2021-01-21T20:12:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6124" started-at="2021-01-21T20:12:20Z" finished-at="2021-01-21T20:12:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="99677" started-at="2021-01-21T20:12:26Z" data-provider="MarketConfig" finished-at="2021-01-21T20:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Turkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-01-21T20:14:06Z" finished-at="2021-01-21T20:14:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="5965" started-at="2021-01-21T20:14:06Z" finished-at="2021-01-21T20:14:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="115233" started-at="2021-01-21T20:14:12Z" data-provider="MarketConfig" finished-at="2021-01-21T20:16:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Turkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Türkçe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-01-21T20:16:08Z" finished-at="2021-01-21T20:16:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6366" started-at="2021-01-21T20:16:08Z" finished-at="2021-01-21T20:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="253683" started-at="2021-01-21T20:16:15Z" data-provider="MarketConfig" finished-at="2021-01-21T20:20:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukraine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="767" started-at="2021-01-21T20:20:28Z" finished-at="2021-01-21T20:20:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6209" started-at="2021-01-21T20:20:29Z" finished-at="2021-01-21T20:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="179946" started-at="2021-01-21T20:20:35Z" data-provider="MarketConfig" finished-at="2021-01-21T20:23:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukraine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[???????]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="781" started-at="2021-01-21T20:23:35Z" finished-at="2021-01-21T20:23:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PreConditon" is-config="true" duration-ms="6205" started-at="2021-01-21T20:23:36Z" finished-at="2021-01-21T20:23:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="Enroll" duration-ms="281001" started-at="2021-01-21T20:23:42Z" data-provider="MarketConfig" finished-at="2021-01-21T20:28:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United Kingdom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="PostCondition" is-config="true" duration-ms="735" started-at="2021-01-21T20:28:23Z" finished-at="2021-01-21T20:28:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:Tests.FranchisePartner@46d56d67]" name="afterSuite" is-config="true" duration-ms="3625" started-at="2021-01-21T21:50:17Z" finished-at="2021-01-21T21:50:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Tests.FranchisePartner -->
      <class name="Tests.HealthCareProducts">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PreConditon" is-config="true" duration-ms="6045" started-at="2021-01-21T21:41:46Z" finished-at="2021-01-21T21:41:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PassReferralID" duration-ms="120232" started-at="2021-01-21T21:41:52Z" data-provider="MarketConfig" finished-at="2021-01-21T21:43:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:711)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PostCondition" is-config="true" duration-ms="1013" started-at="2021-01-21T21:43:52Z" finished-at="2021-01-21T21:43:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PreConditon" is-config="true" duration-ms="6958" started-at="2021-01-21T21:43:53Z" finished-at="2021-01-21T21:44:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PassReferralID" duration-ms="120309" started-at="2021-01-21T21:44:00Z" data-provider="MarketConfig" finished-at="2021-01-21T21:46:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:711)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PostCondition" is-config="true" duration-ms="985" started-at="2021-01-21T21:46:01Z" finished-at="2021-01-21T21:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PreConditon" is-config="true" duration-ms="6701" started-at="2021-01-21T21:46:02Z" finished-at="2021-01-21T21:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PassReferralID" duration-ms="120386" started-at="2021-01-21T21:46:08Z" data-provider="MarketConfig" finished-at="2021-01-21T21:48:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:711)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PostCondition" is-config="true" duration-ms="990" started-at="2021-01-21T21:48:09Z" finished-at="2021-01-21T21:48:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PreConditon" is-config="true" duration-ms="5666" started-at="2021-01-21T21:48:10Z" finished-at="2021-01-21T21:48:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PassReferralID" duration-ms="120260" started-at="2021-01-21T21:48:15Z" data-provider="MarketConfig" finished-at="2021-01-21T21:50:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:711)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PostCondition" is-config="true" duration-ms="966" started-at="2021-01-21T21:50:16Z" finished-at="2021-01-21T21:50:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.HealthCareProducts -->
      <class name="Tests.INDReferralIDPassing">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.INDReferralIDPassing@59fa1d9b]" name="PreConditon" is-config="true" duration-ms="7121" started-at="2021-01-21T20:38:15Z" finished-at="2021-01-21T20:38:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="INDPassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.INDReferralIDPassing@59fa1d9b]" name="INDPassReferralID" duration-ms="80866" started-at="2021-01-21T20:38:22Z" data-provider="MarketConfig" finished-at="2021-01-21T20:39:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minor Summary Labels is Displaying expected [[Enrollment Summary, Enrollment Settings, Co-Applicant/Nominee, About You (For all future correspondence please make sure the Email ID and Contact number is valid. Your login credentials will be sent to the specified E-mail ID), Mailing Address, Direct Deposit for Commissions, The Distributor Agreement - Terms & Conditions, Summary]] but found [[Enrollment Settings, About You (For all future correspondence please make sure the Email ID and Contact number is valid. Your login credentials will be sent to the specified E-mail ID), Co-Applicant/Nominee, Mailing Address, Direct Deposit for Commissions, Password, Summary]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minor Summary Labels is Displaying expected [[Enrollment Summary, Enrollment Settings, Co-Applicant/Nominee, About You (For all future correspondence please make sure the Email ID and Contact number is valid. Your login credentials will be sent to the specified E-mail ID), Mailing Address, Direct Deposit for Commissions, The Distributor Agreement - Terms & Conditions, Summary]] but found [[Enrollment Settings, About You (For all future correspondence please make sure the Email ID and Contact number is valid. Your login credentials will be sent to the specified E-mail ID), Co-Applicant/Nominee, Mailing Address, Direct Deposit for Commissions, Password, Summary]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:465)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.INDReferralIDPassing.INDPassReferralID(INDReferralIDPassing.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- INDPassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.INDReferralIDPassing@59fa1d9b]" name="PostCondition" is-config="true" duration-ms="957" started-at="2021-01-21T20:39:43Z" finished-at="2021-01-21T20:39:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=INDPassReferralID status=FAILURE method=INDReferralIDPassing.INDPassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.INDReferralIDPassing@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.INDReferralIDPassing -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
