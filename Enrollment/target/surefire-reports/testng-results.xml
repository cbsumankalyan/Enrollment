<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="34" ignored="10" total="84" passed="39">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="17752603" started-at="2020-03-22T15:40:10Z" finished-at="2020-03-22T20:36:02Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="17752603" started-at="2020-03-22T15:40:10Z" finished-at="2020-03-22T20:36:02Z">
      <class name="Tests.Fit">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@4501b7af]" name="PreConditon" is-config="true" duration-ms="7390" started-at="2020-03-22T20:03:32Z" finished-at="2020-03-22T20:03:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af]" name="GetFit" duration-ms="126610" started-at="2020-03-22T20:03:40Z" data-provider="MarketConfig" finished-at="2020-03-22T20:05:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United Kingdom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@4501b7af]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-22T20:05:46Z" finished-at="2020-03-22T20:05:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=SUCCESS method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@4501b7af]" name="PreConditon" is-config="true" duration-ms="6427" started-at="2020-03-22T20:05:47Z" finished-at="2020-03-22T20:05:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af]" name="GetFit" duration-ms="157477" started-at="2020-03-22T20:05:53Z" data-provider="MarketConfig" finished-at="2020-03-22T20:08:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@4501b7af]" name="PostCondition" is-config="true" duration-ms="628" started-at="2020-03-22T20:08:31Z" finished-at="2020-03-22T20:08:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=SUCCESS method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@4501b7af]" name="PreConditon" is-config="true" duration-ms="6636" started-at="2020-03-22T20:08:31Z" finished-at="2020-03-22T20:08:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af]" name="GetFit" duration-ms="117059" started-at="2020-03-22T20:08:38Z" data-provider="MarketConfig" finished-at="2020-03-22T20:10:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.GetFitOrderSubmit(SummaryPage.java:2533)
at Pages.Summary.GetFitSummaryDetails(Summary.java:24)
at Tests.Fit.GetFit(Fit.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@4501b7af]" name="PostCondition" is-config="true" duration-ms="898" started-at="2020-03-22T20:10:35Z" finished-at="2020-03-22T20:10:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=FAILURE method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@4501b7af]" name="PreConditon" is-config="true" duration-ms="6560" started-at="2020-03-22T20:10:36Z" finished-at="2020-03-22T20:10:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af]" name="GetFit" duration-ms="117038" started-at="2020-03-22T20:10:43Z" data-provider="MarketConfig" finished-at="2020-03-22T20:12:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.GetFitOrderSubmit(SummaryPage.java:2533)
at Pages.Summary.GetFitSummaryDetails(Summary.java:24)
at Tests.Fit.GetFit(Fit.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@4501b7af]" name="PostCondition" is-config="true" duration-ms="917" started-at="2020-03-22T20:12:40Z" finished-at="2020-03-22T20:12:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=FAILURE method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@4501b7af]" name="PreConditon" is-config="true" duration-ms="6152" started-at="2020-03-22T20:12:41Z" finished-at="2020-03-22T20:12:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af]" name="GetFit" duration-ms="160177" started-at="2020-03-22T20:12:47Z" data-provider="MarketConfig" finished-at="2020-03-22T20:15:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@4501b7af]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-22T20:15:27Z" finished-at="2020-03-22T20:15:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=SUCCESS method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.Fit -->
      <class name="Tests.PrefferedCustomer">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6226" started-at="2020-03-22T19:29:58Z" finished-at="2020-03-22T19:30:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="222382" started-at="2020-03-22T19:30:04Z" data-provider="MarketConfig" finished-at="2020-03-22T19:33:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bahamas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="627" started-at="2020-03-22T19:33:46Z" finished-at="2020-03-22T19:33:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="5690" started-at="2020-03-22T19:33:47Z" finished-at="2020-03-22T19:33:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="170181" started-at="2020-03-22T19:33:53Z" data-provider="MarketConfig" finished-at="2020-03-22T19:36:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1939)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="907" started-at="2020-03-22T19:36:43Z" finished-at="2020-03-22T19:36:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6062" started-at="2020-03-22T19:36:44Z" finished-at="2020-03-22T19:36:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="169835" started-at="2020-03-22T19:36:50Z" data-provider="MarketConfig" finished-at="2020-03-22T19:39:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1939)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="915" started-at="2020-03-22T19:39:40Z" finished-at="2020-03-22T19:39:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6113" started-at="2020-03-22T19:39:40Z" finished-at="2020-03-22T19:39:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="144746" started-at="2020-03-22T19:39:47Z" data-provider="MarketConfig" finished-at="2020-03-22T19:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Colombia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major zip code expected [null] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major zip code expected [null] but found []
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1846)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="938" started-at="2020-03-22T19:42:11Z" finished-at="2020-03-22T19:42:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="5689" started-at="2020-03-22T19:42:12Z" finished-at="2020-03-22T19:42:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="223264" started-at="2020-03-22T19:42:18Z" data-provider="MarketConfig" finished-at="2020-03-22T19:46:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dominican Republic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-22T19:46:01Z" finished-at="2020-03-22T19:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6175" started-at="2020-03-22T19:46:02Z" finished-at="2020-03-22T19:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="195084" started-at="2020-03-22T19:46:08Z" data-provider="MarketConfig" finished-at="2020-03-22T19:49:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mexico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="616" started-at="2020-03-22T19:49:23Z" finished-at="2020-03-22T19:49:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6260" started-at="2020-03-22T19:49:24Z" finished-at="2020-03-22T19:49:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="187411" started-at="2020-03-22T19:49:30Z" data-provider="MarketConfig" finished-at="2020-03-22T19:52:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="626" started-at="2020-03-22T19:52:37Z" finished-at="2020-03-22T19:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6084" started-at="2020-03-22T19:52:38Z" finished-at="2020-03-22T19:52:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="186307" started-at="2020-03-22T19:52:44Z" data-provider="MarketConfig" finished-at="2020-03-22T19:55:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="611" started-at="2020-03-22T19:55:50Z" finished-at="2020-03-22T19:55:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="5652" started-at="2020-03-22T19:55:51Z" finished-at="2020-03-22T19:55:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="232752" started-at="2020-03-22T19:55:57Z" data-provider="MarketConfig" finished-at="2020-03-22T19:59:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-22T19:59:49Z" finished-at="2020-03-22T19:59:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PreConditon" is-config="true" duration-ms="6405" started-at="2020-03-22T19:59:50Z" finished-at="2020-03-22T19:59:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="Enroll" duration-ms="215188" started-at="2020-03-22T19:59:56Z" data-provider="MarketConfig" finished-at="2020-03-22T20:03:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@28d25987]" name="PostCondition" is-config="true" duration-ms="626" started-at="2020-03-22T20:03:32Z" finished-at="2020-03-22T20:03:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.PrefferedCustomer -->
      <class name="Tests.PatientPortal">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@523884b2]" name="PreConditon" is-config="true" duration-ms="5883" started-at="2020-03-22T20:15:28Z" finished-at="2020-03-22T20:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2]" name="Patient" duration-ms="232632" started-at="2020-03-22T20:15:33Z" data-provider="MarketConfig" finished-at="2020-03-22T20:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@523884b2]" name="PostCondition" is-config="true" duration-ms="616" started-at="2020-03-22T20:19:26Z" finished-at="2020-03-22T20:19:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=SUCCESS method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@523884b2]" name="PreConditon" is-config="true" duration-ms="6795" started-at="2020-03-22T20:19:27Z" finished-at="2020-03-22T20:19:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2]" name="Patient" duration-ms="197321" started-at="2020-03-22T20:19:33Z" data-provider="MarketConfig" finished-at="2020-03-22T20:22:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [US] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [US] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1939)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PatientPortal.Patient(PatientPortal.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@523884b2]" name="PostCondition" is-config="true" duration-ms="908" started-at="2020-03-22T20:22:51Z" finished-at="2020-03-22T20:22:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=FAILURE method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@523884b2]" name="PreConditon" is-config="true" duration-ms="6258" started-at="2020-03-22T20:22:52Z" finished-at="2020-03-22T20:22:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2]" name="Patient" duration-ms="97305" started-at="2020-03-22T20:22:58Z" data-provider="MarketConfig" finished-at="2020-03-22T20:24:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at POM.AccountSetupPage.PCAccountDetails(AccountSetupPage.java:1253)
at Pages.Account.PCPersonalDetails(Account.java:18)
at Tests.PatientPortal.Patient(PatientPortal.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="FAIL" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@523884b2]" name="PostCondition" is-config="true" duration-ms="312" started-at="2020-03-22T20:24:35Z" finished-at="2020-03-22T20:24:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=FAILURE method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at Pages.SuperTestNG.PostCondition(SuperTestNG.java:253)
at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="SKIP" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@523884b2]" name="Patient" duration-ms="0" started-at="2020-03-22T20:24:36Z" data-provider="MarketConfig" finished-at="2020-03-22T20:24:36Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at Pages.SuperTestNG.PostCondition(SuperTestNG.java:253)
at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="SKIP" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@523884b2]" name="PreConditon" is-config="true" duration-ms="0" started-at="2020-03-22T20:24:36Z" finished-at="2020-03-22T20:24:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="SKIP" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@523884b2]" name="PostCondition" is-config="true" duration-ms="0" started-at="2020-03-22T20:24:36Z" finished-at="2020-03-22T20:24:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.PatientPortal -->
      <class name="Tests.ReferralIDPassing">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.ReferralIDPassing@59fa1d9b]" name="PreConditon" is-config="true" duration-ms="5206" started-at="2020-03-22T19:21:44Z" finished-at="2020-03-22T19:21:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@59fa1d9b]" name="PassReferralID" duration-ms="209723" started-at="2020-03-22T19:21:50Z" data-provider="MarketConfig" finished-at="2020-03-22T19:25:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Packs expected [[https://hydraqa.unicity.net/v5a-test/items?id.unicity=31440, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31518, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31651, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31655, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31751, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31858, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31859]] but found [[https://hydraqa.unicity.net/v5a-test/items?id.unicity=31440, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31518, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31651, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31655, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31751, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31858, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31859, https://hydraqa.unicity.net/v5a-test/items?id.unicity=32127]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Packs expected [[https://hydraqa.unicity.net/v5a-test/items?id.unicity=31440, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31518, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31651, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31655, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31751, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31858, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31859]] but found [[https://hydraqa.unicity.net/v5a-test/items?id.unicity=31440, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31518, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31651, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31655, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31751, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31858, https://hydraqa.unicity.net/v5a-test/items?id.unicity=31859, https://hydraqa.unicity.net/v5a-test/items?id.unicity=32127]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.PaymentPage.ShippingDetails(PaymentPage.java:726)
at Pages.Payment.PaymentDetails(Payment.java:15)
at Tests.ReferralIDPassing.PassReferralID(ReferralIDPassing.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.ReferralIDPassing@59fa1d9b]" name="PostCondition" is-config="true" duration-ms="915" started-at="2020-03-22T19:25:19Z" finished-at="2020-03-22T19:25:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=ReferralIDPassing.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.ReferralIDPassing@59fa1d9b]" name="PreConditon" is-config="true" duration-ms="6107" started-at="2020-03-22T19:25:20Z" finished-at="2020-03-22T19:25:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@59fa1d9b]" name="PassReferralID" duration-ms="270665" started-at="2020-03-22T19:25:26Z" data-provider="MarketConfig" finished-at="2020-03-22T19:29:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.ReferralIDPassing@59fa1d9b]" name="PostCondition" is-config="true" duration-ms="620" started-at="2020-03-22T19:29:57Z" finished-at="2020-03-22T19:29:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=SUCCESS method=ReferralIDPassing.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.ReferralIDPassing -->
      <class name="Tests.FranchisePartner">
        <test-method status="PASS" signature="StartReport()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="StartReport" is-config="true" duration-ms="125" started-at="2020-03-22T15:40:10Z" finished-at="2020-03-22T15:40:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartReport -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="9035" started-at="2020-03-22T15:40:10Z" finished-at="2020-03-22T15:40:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="288334" started-at="2020-03-22T15:40:19Z" data-provider="MarketConfig" finished-at="2020-03-22T15:45:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:696)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:249)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="936" started-at="2020-03-22T15:45:07Z" finished-at="2020-03-22T15:45:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6869" started-at="2020-03-22T15:45:08Z" finished-at="2020-03-22T15:45:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="290374" started-at="2020-03-22T15:45:15Z" data-provider="MarketConfig" finished-at="2020-03-22T15:50:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:696)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:249)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="929" started-at="2020-03-22T15:50:05Z" finished-at="2020-03-22T15:50:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="7748" started-at="2020-03-22T15:50:06Z" finished-at="2020-03-22T15:50:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="294860" started-at="2020-03-22T15:50:14Z" data-provider="MarketConfig" finished-at="2020-03-22T15:55:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bahamas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-22T15:55:09Z" finished-at="2020-03-22T15:55:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5858" started-at="2020-03-22T15:55:10Z" finished-at="2020-03-22T15:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="291917" started-at="2020-03-22T15:55:16Z" data-provider="MarketConfig" finished-at="2020-03-22T16:00:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Total Price is Wrong expected [179.17] but found [168.04]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Total Price is Wrong expected [179.17] but found [168.04]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:732)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="945" started-at="2020-03-22T16:00:07Z" finished-at="2020-03-22T16:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5783" started-at="2020-03-22T16:00:08Z" finished-at="2020-03-22T16:00:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="291038" started-at="2020-03-22T16:00:14Z" data-provider="MarketConfig" finished-at="2020-03-22T16:05:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Total Price is Wrong expected [179.17] but found [168.04]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Total Price is Wrong expected [179.17] but found [168.04]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:732)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="927" started-at="2020-03-22T16:05:05Z" finished-at="2020-03-22T16:05:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5989" started-at="2020-03-22T16:05:06Z" finished-at="2020-03-22T16:05:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="281975" started-at="2020-03-22T16:05:12Z" data-provider="MarketConfig" finished-at="2020-03-22T16:09:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Total Price is Wrong expected [370.56] but found [345.49]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Total Price is Wrong expected [370.56] but found [345.49]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:732)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="943" started-at="2020-03-22T16:09:54Z" finished-at="2020-03-22T16:09:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5890" started-at="2020-03-22T16:09:55Z" finished-at="2020-03-22T16:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="182562" started-at="2020-03-22T16:10:01Z" data-provider="MarketConfig" finished-at="2020-03-22T16:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Total Price is Wrong expected [451.7] but found [457.7]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Total Price is Wrong expected [451.7] but found [457.7]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:732)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="939" started-at="2020-03-22T16:13:03Z" finished-at="2020-03-22T16:13:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5796" started-at="2020-03-22T16:13:04Z" finished-at="2020-03-22T16:13:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="182172" started-at="2020-03-22T16:13:10Z" data-provider="MarketConfig" finished-at="2020-03-22T16:16:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major AR Total Price is Wrong expected [288.4] but found [294.4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major AR Total Price is Wrong expected [288.4] but found [294.4]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:748)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="907" started-at="2020-03-22T16:16:12Z" finished-at="2020-03-22T16:16:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5964" started-at="2020-03-22T16:16:13Z" finished-at="2020-03-22T16:16:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="225922" started-at="2020-03-22T16:16:19Z" data-provider="MarketConfig" finished-at="2020-03-22T16:20:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Colombia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major zip code expected [null] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major zip code expected [null] but found []
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:872)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="927" started-at="2020-03-22T16:20:05Z" finished-at="2020-03-22T16:20:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5717" started-at="2020-03-22T16:20:06Z" finished-at="2020-03-22T16:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="379487" started-at="2020-03-22T16:20:12Z" data-provider="MarketConfig" finished-at="2020-03-22T16:26:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Denmark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-22T16:26:31Z" finished-at="2020-03-22T16:26:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5931" started-at="2020-03-22T16:26:32Z" finished-at="2020-03-22T16:26:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="333946" started-at="2020-03-22T16:26:38Z" data-provider="MarketConfig" finished-at="2020-03-22T16:32:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Denmark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Danish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-22T16:32:12Z" finished-at="2020-03-22T16:32:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6918" started-at="2020-03-22T16:32:12Z" finished-at="2020-03-22T16:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="302495" started-at="2020-03-22T16:32:19Z" data-provider="MarketConfig" finished-at="2020-03-22T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dominican Republic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-22T16:37:22Z" finished-at="2020-03-22T16:37:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6567" started-at="2020-03-22T16:37:22Z" finished-at="2020-03-22T16:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="221916" started-at="2020-03-22T16:37:29Z" data-provider="MarketConfig" finished-at="2020-03-22T16:41:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Quotes Call Packs is not Displaying: lists don't have the same size expected [73] but found [72]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Quotes Call Packs is not Displaying: lists don't have the same size expected [73] but found [72]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:819)
at POM.AutoRefillPage.AutoRefill(AutoRefillPage.java:156)
at Pages.AutoRefill.ARPacks(AutoRefill.java:8)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:250)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="914" started-at="2020-03-22T16:41:11Z" finished-at="2020-03-22T16:41:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6277" started-at="2020-03-22T16:41:12Z" finished-at="2020-03-22T16:41:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="305015" started-at="2020-03-22T16:41:18Z" data-provider="MarketConfig" finished-at="2020-03-22T16:46:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Total Price is Wrong expected [1165.5] but found [1102.55]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Total Price is Wrong expected [1165.5] but found [1102.55]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:732)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="1252" started-at="2020-03-22T16:46:23Z" finished-at="2020-03-22T16:46:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5857" started-at="2020-03-22T16:46:24Z" finished-at="2020-03-22T16:46:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="343064" started-at="2020-03-22T16:46:30Z" data-provider="MarketConfig" finished-at="2020-03-22T16:52:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Total Price is Wrong expected [259.2] but found [239.92]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Total Price is Wrong expected [259.2] but found [239.92]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:732)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="1236" started-at="2020-03-22T16:52:13Z" finished-at="2020-03-22T16:52:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6177" started-at="2020-03-22T16:52:15Z" finished-at="2020-03-22T16:52:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="322715" started-at="2020-03-22T16:52:21Z" data-provider="MarketConfig" finished-at="2020-03-22T16:57:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Total Price is Wrong expected [400.72] but found [369.8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Total Price is Wrong expected [400.72] but found [369.8]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:732)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="1200" started-at="2020-03-22T16:57:43Z" finished-at="2020-03-22T16:57:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6303" started-at="2020-03-22T16:57:45Z" finished-at="2020-03-22T16:57:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="345511" started-at="2020-03-22T16:57:51Z" data-provider="MarketConfig" finished-at="2020-03-22T17:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hungary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-22T17:03:36Z" finished-at="2020-03-22T17:03:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6172" started-at="2020-03-22T17:03:37Z" finished-at="2020-03-22T17:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="241600" started-at="2020-03-22T17:03:43Z" data-provider="MarketConfig" finished-at="2020-03-22T17:07:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hungary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hungarian]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Quotes Call Packs is not Displaying: lists don't have the same size expected [69] but found [68]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Quotes Call Packs is not Displaying: lists don't have the same size expected [69] but found [68]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:819)
at POM.AutoRefillPage.AutoRefill(AutoRefillPage.java:156)
at Pages.AutoRefill.ARPacks(AutoRefill.java:8)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:250)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="915" started-at="2020-03-22T17:07:45Z" finished-at="2020-03-22T17:07:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6250" started-at="2020-03-22T17:07:46Z" finished-at="2020-03-22T17:07:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="45824" started-at="2020-03-22T17:07:52Z" data-provider="MarketConfig" finished-at="2020-03-22T17:08:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minor Lables expected [[Enrollment Settings, About You (For all future correspondence please make sure the Email ID and Contact number is valid. Your login credentials will be sent to the specified E-mail ID), Co-Applicant/Nominee, Mailing Address]] but found [[Enrollment Settings, About You (For all future correspondence please make sure the Email ID and Contact number is valid. Your login credentials will be sent to the specified E-mail ID), Co-Applicant/Nominee, Mailing Address, Direct Deposit for Commissions]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minor Lables expected [[Enrollment Settings, About You (For all future correspondence please make sure the Email ID and Contact number is valid. Your login credentials will be sent to the specified E-mail ID), Co-Applicant/Nominee, Mailing Address]] but found [[Enrollment Settings, About You (For all future correspondence please make sure the Email ID and Contact number is valid. Your login credentials will be sent to the specified E-mail ID), Co-Applicant/Nominee, Mailing Address, Direct Deposit for Commissions]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.AccountSetupPage.AccountDetails(AccountSetupPage.java:588)
at Pages.Account.PersonalDetails(Account.java:13)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:251)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="911" started-at="2020-03-22T17:08:38Z" finished-at="2020-03-22T17:08:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5856" started-at="2020-03-22T17:08:39Z" finished-at="2020-03-22T17:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="289930" started-at="2020-03-22T17:08:45Z" data-provider="MarketConfig" finished-at="2020-03-22T17:13:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Italiano]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:696)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:249)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="932" started-at="2020-03-22T17:13:35Z" finished-at="2020-03-22T17:13:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6331" started-at="2020-03-22T17:13:36Z" finished-at="2020-03-22T17:13:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="286815" started-at="2020-03-22T17:13:42Z" data-provider="MarketConfig" finished-at="2020-03-22T17:18:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:696)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:249)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="948" started-at="2020-03-22T17:18:29Z" finished-at="2020-03-22T17:18:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6511" started-at="2020-03-22T17:18:30Z" finished-at="2020-03-22T17:18:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="209070" started-at="2020-03-22T17:18:36Z" data-provider="MarketConfig" finished-at="2020-03-22T17:22:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ireland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-22T17:22:05Z" finished-at="2020-03-22T17:22:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6860" started-at="2020-03-22T17:22:06Z" finished-at="2020-03-22T17:22:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="324035" started-at="2020-03-22T17:22:13Z" data-provider="MarketConfig" finished-at="2020-03-22T17:27:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jamaica]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-22T17:27:37Z" finished-at="2020-03-22T17:27:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5905" started-at="2020-03-22T17:27:37Z" finished-at="2020-03-22T17:27:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="318203" started-at="2020-03-22T17:27:43Z" data-provider="MarketConfig" finished-at="2020-03-22T17:33:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-22T17:33:01Z" finished-at="2020-03-22T17:33:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6579" started-at="2020-03-22T17:33:02Z" finished-at="2020-03-22T17:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="320961" started-at="2020-03-22T17:33:09Z" data-provider="MarketConfig" finished-at="2020-03-22T17:38:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-22T17:38:30Z" finished-at="2020-03-22T17:38:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="7469" started-at="2020-03-22T17:38:30Z" finished-at="2020-03-22T17:38:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="318032" started-at="2020-03-22T17:38:38Z" data-provider="MarketConfig" finished-at="2020-03-22T17:43:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-22T17:43:56Z" finished-at="2020-03-22T17:43:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6473" started-at="2020-03-22T17:43:56Z" finished-at="2020-03-22T17:44:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="189135" started-at="2020-03-22T17:44:03Z" data-provider="MarketConfig" finished-at="2020-03-22T17:47:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mexico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minor Summary Labels is Displaying expected [[Resumen de Inscripción, Configuración de la inscripción, Co-solicitante, Su Información, Tu dirección de envío/Dirección principal, Tu dirección de facturación, Tu información del pago, Términos y Condiciones, Resumen]] but found [[Opción de pago, Información de la tarjeta de Crédito / Débito, Dirección de facturación/correo, Dirección de envío, Método de envío, Resumen]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minor Summary Labels is Displaying expected [[Resumen de Inscripción, Configuración de la inscripción, Co-solicitante, Su Información, Tu dirección de envío/Dirección principal, Tu dirección de facturación, Tu información del pago, Términos y Condiciones, Resumen]] but found [[Opción de pago, Información de la tarjeta de Crédito / Débito, Dirección de facturación/correo, Dirección de envío, Método de envío, Resumen]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:395)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="922" started-at="2020-03-22T17:47:12Z" finished-at="2020-03-22T17:47:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5756" started-at="2020-03-22T17:47:13Z" finished-at="2020-03-22T17:47:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="338198" started-at="2020-03-22T17:47:19Z" data-provider="MarketConfig" finished-at="2020-03-22T17:52:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-22T17:52:57Z" finished-at="2020-03-22T17:52:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6352" started-at="2020-03-22T17:52:58Z" finished-at="2020-03-22T17:53:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="349946" started-at="2020-03-22T17:53:04Z" data-provider="MarketConfig" finished-at="2020-03-22T17:58:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-22T17:58:54Z" finished-at="2020-03-22T17:58:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6959" started-at="2020-03-22T17:58:55Z" finished-at="2020-03-22T17:59:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="181039" started-at="2020-03-22T17:59:01Z" data-provider="MarketConfig" finished-at="2020-03-22T18:02:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-22T18:02:02Z" finished-at="2020-03-22T18:02:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5663" started-at="2020-03-22T18:02:03Z" finished-at="2020-03-22T18:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="107683" started-at="2020-03-22T18:02:09Z" data-provider="MarketConfig" finished-at="2020-03-22T18:03:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-22T18:03:56Z" finished-at="2020-03-22T18:03:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6553" started-at="2020-03-22T18:03:57Z" finished-at="2020-03-22T18:04:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="191261" started-at="2020-03-22T18:04:04Z" data-provider="MarketConfig" finished-at="2020-03-22T18:07:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Norwegian]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-22T18:07:15Z" finished-at="2020-03-22T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5848" started-at="2020-03-22T18:07:16Z" finished-at="2020-03-22T18:07:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="205329" started-at="2020-03-22T18:07:21Z" data-provider="MarketConfig" finished-at="2020-03-22T18:10:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Poland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-22T18:10:47Z" finished-at="2020-03-22T18:10:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6243" started-at="2020-03-22T18:10:47Z" finished-at="2020-03-22T18:10:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="200188" started-at="2020-03-22T18:10:54Z" data-provider="MarketConfig" finished-at="2020-03-22T18:14:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Poland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Polish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="632" started-at="2020-03-22T18:14:14Z" finished-at="2020-03-22T18:14:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6350" started-at="2020-03-22T18:14:14Z" finished-at="2020-03-22T18:14:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="246361" started-at="2020-03-22T18:14:21Z" data-provider="MarketConfig" finished-at="2020-03-22T18:18:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-22T18:18:27Z" finished-at="2020-03-22T18:18:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6104" started-at="2020-03-22T18:18:28Z" finished-at="2020-03-22T18:18:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="260413" started-at="2020-03-22T18:18:34Z" data-provider="MarketConfig" finished-at="2020-03-22T18:22:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-22T18:22:54Z" finished-at="2020-03-22T18:22:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="8362" started-at="2020-03-22T18:22:55Z" finished-at="2020-03-22T18:23:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="272480" started-at="2020-03-22T18:23:03Z" data-provider="MarketConfig" finished-at="2020-03-22T18:27:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sweden]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Svenska]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="630" started-at="2020-03-22T18:27:36Z" finished-at="2020-03-22T18:27:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6258" started-at="2020-03-22T18:27:36Z" finished-at="2020-03-22T18:27:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="263993" started-at="2020-03-22T18:27:43Z" data-provider="MarketConfig" finished-at="2020-03-22T18:32:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sweden]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [SE] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [SE] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:1011)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="931" started-at="2020-03-22T18:32:07Z" finished-at="2020-03-22T18:32:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5546" started-at="2020-03-22T18:32:08Z" finished-at="2020-03-22T18:32:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="273766" started-at="2020-03-22T18:32:13Z" data-provider="MarketConfig" finished-at="2020-03-22T18:36:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-22T18:36:47Z" finished-at="2020-03-22T18:36:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6207" started-at="2020-03-22T18:36:48Z" finished-at="2020-03-22T18:36:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="278827" started-at="2020-03-22T18:36:54Z" data-provider="MarketConfig" finished-at="2020-03-22T18:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-22T18:41:33Z" finished-at="2020-03-22T18:41:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5831" started-at="2020-03-22T18:41:33Z" finished-at="2020-03-22T18:41:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="276933" started-at="2020-03-22T18:41:39Z" data-provider="MarketConfig" finished-at="2020-03-22T18:46:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-22T18:46:16Z" finished-at="2020-03-22T18:46:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6493" started-at="2020-03-22T18:46:17Z" finished-at="2020-03-22T18:46:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="283944" started-at="2020-03-22T18:46:23Z" data-provider="MarketConfig" finished-at="2020-03-22T18:51:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Italiano]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-22T18:51:07Z" finished-at="2020-03-22T18:51:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6191" started-at="2020-03-22T18:51:08Z" finished-at="2020-03-22T18:51:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="291578" started-at="2020-03-22T18:51:14Z" data-provider="MarketConfig" finished-at="2020-03-22T18:56:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:696)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:249)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="901" started-at="2020-03-22T18:56:05Z" finished-at="2020-03-22T18:56:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6332" started-at="2020-03-22T18:56:06Z" finished-at="2020-03-22T18:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="286938" started-at="2020-03-22T18:56:13Z" data-provider="MarketConfig" finished-at="2020-03-22T19:01:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:696)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:249)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="965" started-at="2020-03-22T19:01:00Z" finished-at="2020-03-22T19:01:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6711" started-at="2020-03-22T19:01:01Z" finished-at="2020-03-22T19:01:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="311464" started-at="2020-03-22T19:01:07Z" data-provider="MarketConfig" finished-at="2020-03-22T19:06:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-22T19:06:19Z" finished-at="2020-03-22T19:06:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6003" started-at="2020-03-22T19:06:19Z" finished-at="2020-03-22T19:06:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="277890" started-at="2020-03-22T19:06:25Z" data-provider="MarketConfig" finished-at="2020-03-22T19:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="656" started-at="2020-03-22T19:11:03Z" finished-at="2020-03-22T19:11:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5642" started-at="2020-03-22T19:11:04Z" finished-at="2020-03-22T19:11:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="190723" started-at="2020-03-22T19:11:10Z" data-provider="MarketConfig" finished-at="2020-03-22T19:14:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukraine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [UA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [UA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:1011)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="925" started-at="2020-03-22T19:14:20Z" finished-at="2020-03-22T19:14:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="5796" started-at="2020-03-22T19:14:21Z" finished-at="2020-03-22T19:14:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="187344" started-at="2020-03-22T19:14:27Z" data-provider="MarketConfig" finished-at="2020-03-22T19:17:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukraine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[???????]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [UA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [UA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:1011)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="927" started-at="2020-03-22T19:17:34Z" finished-at="2020-03-22T19:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PreConditon" is-config="true" duration-ms="6664" started-at="2020-03-22T19:17:35Z" finished-at="2020-03-22T19:17:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="Enroll" duration-ms="242128" started-at="2020-03-22T19:17:42Z" data-provider="MarketConfig" finished-at="2020-03-22T19:21:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United Kingdom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at POM.AccountSetupPage.AccountDetails(AccountSetupPage.java:703)
at Pages.Account.PersonalDetails(Account.java:13)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:251)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="FAIL" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="PostCondition" is-config="true" duration-ms="313" started-at="2020-03-22T19:21:44Z" finished-at="2020-03-22T19:21:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at Pages.SuperTestNG.PostCondition(SuperTestNG.java:253)
at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:Tests.FranchisePartner@d8355a8]" name="afterSuite" is-config="true" duration-ms="3847" started-at="2020-03-22T20:36:02Z" finished-at="2020-03-22T20:36:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Tests.FranchisePartner -->
      <class name="Tests.HealthCareProducts">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PreConditon" is-config="true" duration-ms="6473" started-at="2020-03-22T20:24:36Z" finished-at="2020-03-22T20:24:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PassReferralID" duration-ms="131198" started-at="2020-03-22T20:24:42Z" data-provider="MarketConfig" finished-at="2020-03-22T20:26:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Packs expected [[https://hydraqa.unicity.net/v5a-test/items?id.unicity=29694]] but found [[https://hydraqa.unicity.net/v5a-test/items?id.unicity=26442, https://hydraqa.unicity.net/v5a-test/items?id.unicity=27182, https://hydraqa.unicity.net/v5a-test/items?id.unicity=29694]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Packs expected [[https://hydraqa.unicity.net/v5a-test/items?id.unicity=29694]] but found [[https://hydraqa.unicity.net/v5a-test/items?id.unicity=26442, https://hydraqa.unicity.net/v5a-test/items?id.unicity=27182, https://hydraqa.unicity.net/v5a-test/items?id.unicity=29694]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.PaymentPage.ShippingDetails(PaymentPage.java:726)
at Pages.Payment.PaymentDetails(Payment.java:15)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:67)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PostCondition" is-config="true" duration-ms="954" started-at="2020-03-22T20:26:53Z" finished-at="2020-03-22T20:26:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PreConditon" is-config="true" duration-ms="5345" started-at="2020-03-22T20:26:54Z" finished-at="2020-03-22T20:27:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PassReferralID" duration-ms="228859" started-at="2020-03-22T20:27:00Z" data-provider="MarketConfig" finished-at="2020-03-22T20:30:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-22T20:30:48Z" finished-at="2020-03-22T20:30:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=SUCCESS method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PreConditon" is-config="true" duration-ms="6132" started-at="2020-03-22T20:30:49Z" finished-at="2020-03-22T20:30:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PassReferralID" duration-ms="157821" started-at="2020-03-22T20:30:55Z" data-provider="MarketConfig" finished-at="2020-03-22T20:33:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:1011)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PostCondition" is-config="true" duration-ms="937" started-at="2020-03-22T20:33:33Z" finished-at="2020-03-22T20:33:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PreConditon" is-config="true" duration-ms="6502" started-at="2020-03-22T20:33:34Z" finished-at="2020-03-22T20:33:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PassReferralID" duration-ms="140998" started-at="2020-03-22T20:33:40Z" data-provider="MarketConfig" finished-at="2020-03-22T20:36:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minor Summary Labels is Displaying expected [[Résumé d'inscription, Paramètres d'inscription, conjoint, À Propos de Vous, Votre Adresse de livraison/Adresse principale, Votre Adresse de Facturation, Votre conditions de vente, Termes et Conditions, Résumé]] but found [[des informations de carte de crédit, Votre Adresse de Facturation, Adresse de livraison/Adresse principale, méthode d'expédition, Résumé]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minor Summary Labels is Displaying expected [[Résumé d'inscription, Paramètres d'inscription, conjoint, À Propos de Vous, Votre Adresse de livraison/Adresse principale, Votre Adresse de Facturation, Votre conditions de vente, Termes et Conditions, Résumé]] but found [[des informations de carte de crédit, Votre Adresse de Facturation, Adresse de livraison/Adresse principale, méthode d'expédition, Résumé]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:395)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@5b275dab]" name="PostCondition" is-config="true" duration-ms="923" started-at="2020-03-22T20:36:01Z" finished-at="2020-03-22T20:36:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@5b275dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.HealthCareProducts -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
