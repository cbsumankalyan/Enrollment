<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="33" ignored="10" total="111" passed="68">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="19497820" started-at="2021-05-12T16:40:18Z" finished-at="2021-05-12T22:05:15Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="19497820" started-at="2021-05-12T16:40:18Z" finished-at="2021-05-12T22:05:15Z">
      <class name="Tests.Fit">
        <test-method status="FAIL" signature="GetFit(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@ae45eb6]" name="GetFit" duration-ms="0" started-at="2021-05-12T22:05:15Z" data-provider="MarketConfig" finished-at="2021-05-12T22:05:15Z">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: GetFit([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) United Kingdom,(java.lang.String) English,(java.lang.String) Pack]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: GetFit([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) United Kingdom,(java.lang.String) English,(java.lang.String) Pack]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
      </class> <!-- Tests.Fit -->
      <class name="Tests.PrefferedCustomer">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PreConditon" is-config="true" duration-ms="3049" started-at="2021-05-12T21:35:26Z" finished-at="2021-05-12T21:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="Enroll" duration-ms="231707" started-at="2021-05-12T21:35:29Z" data-provider="MarketConfig" finished-at="2021-05-12T21:39:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bahamas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T21:39:21Z" finished-at="2021-05-12T21:39:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PreConditon" is-config="true" duration-ms="3149" started-at="2021-05-12T21:39:22Z" finished-at="2021-05-12T21:39:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="Enroll" duration-ms="204910" started-at="2021-05-12T21:39:25Z" data-provider="MarketConfig" finished-at="2021-05-12T21:42:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:63168}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ca30de08bf30e56a13bb7f5112772960
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:63168}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ca30de08bf30e56a13bb7f5112772960
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1153)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PostCondition" is-config="true" duration-ms="818" started-at="2021-05-12T21:42:50Z" finished-at="2021-05-12T21:42:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PreConditon" is-config="true" duration-ms="3048" started-at="2021-05-12T21:42:51Z" finished-at="2021-05-12T21:42:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="Enroll" duration-ms="187879" started-at="2021-05-12T21:42:54Z" data-provider="MarketConfig" finished-at="2021-05-12T21:46:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:63228}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 05d01397ba4bcdfa9db8eb5c71255b06
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:63228}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 05d01397ba4bcdfa9db8eb5c71255b06
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1153)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PostCondition" is-config="true" duration-ms="766" started-at="2021-05-12T21:46:01Z" finished-at="2021-05-12T21:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PreConditon" is-config="true" duration-ms="3077" started-at="2021-05-12T21:46:02Z" finished-at="2021-05-12T21:46:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="Enroll" duration-ms="61336" started-at="2021-05-12T21:46:05Z" data-provider="MarketConfig" finished-at="2021-05-12T21:47:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Colombia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.PCAdditionalProducts(InitialOrderPage.java:913)
at Pages.InitialOrder.PCPacksChecking(InitialOrder.java:17)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:97)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PostCondition" is-config="true" duration-ms="746" started-at="2021-05-12T21:47:07Z" finished-at="2021-05-12T21:47:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PreConditon" is-config="true" duration-ms="2987" started-at="2021-05-12T21:47:07Z" finished-at="2021-05-12T21:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="Enroll" duration-ms="116327" started-at="2021-05-12T21:47:10Z" data-provider="MarketConfig" finished-at="2021-05-12T21:49:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dominican Republic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Dajabon] but found [Dajabón]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Dajabon] but found [Dajabón]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.PaymentPage.ShippingDetails(PaymentPage.java:572)
at Pages.Payment.PaymentDetails(Payment.java:15)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PostCondition" is-config="true" duration-ms="783" started-at="2021-05-12T21:49:07Z" finished-at="2021-05-12T21:49:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PreConditon" is-config="true" duration-ms="3069" started-at="2021-05-12T21:49:07Z" finished-at="2021-05-12T21:49:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="Enroll" duration-ms="174683" started-at="2021-05-12T21:49:11Z" data-provider="MarketConfig" finished-at="2021-05-12T21:52:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mexico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:63378}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 5348dff14e80c0c159b608fcfe1f9c29
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:63378}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 5348dff14e80c0c159b608fcfe1f9c29
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1153)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PostCondition" is-config="true" duration-ms="799" started-at="2021-05-12T21:52:05Z" finished-at="2021-05-12T21:52:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PreConditon" is-config="true" duration-ms="3008" started-at="2021-05-12T21:52:06Z" finished-at="2021-05-12T21:52:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="Enroll" duration-ms="207412" started-at="2021-05-12T21:52:09Z" data-provider="MarketConfig" finished-at="2021-05-12T21:55:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T21:55:36Z" finished-at="2021-05-12T21:55:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PreConditon" is-config="true" duration-ms="3041" started-at="2021-05-12T21:55:37Z" finished-at="2021-05-12T21:55:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="Enroll" duration-ms="206307" started-at="2021-05-12T21:55:40Z" data-provider="MarketConfig" finished-at="2021-05-12T21:59:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T21:59:06Z" finished-at="2021-05-12T21:59:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PreConditon" is-config="true" duration-ms="3196" started-at="2021-05-12T21:59:07Z" finished-at="2021-05-12T21:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="Enroll" duration-ms="135550" started-at="2021-05-12T21:59:10Z" data-provider="MarketConfig" finished-at="2021-05-12T22:01:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//select[@id='address_country']//option[@selected='selected']"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:63558}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3f2569361c9a535938c3808282a1c7c5
*** Element info: {Using=xpath, value=//select[@id='address_country']//option[@selected='selected']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//select[@id='address_country']//option[@selected='selected']"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:63558}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3f2569361c9a535938c3808282a1c7c5
*** Element info: {Using=xpath, value=//select[@id='address_country']//option[@selected='selected']}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.PaymentPage.ShippingDetails(PaymentPage.java:438)
at Pages.Payment.PaymentDetails(Payment.java:15)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PostCondition" is-config="true" duration-ms="765" started-at="2021-05-12T22:01:26Z" finished-at="2021-05-12T22:01:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PreConditon" is-config="true" duration-ms="3078" started-at="2021-05-12T22:01:27Z" finished-at="2021-05-12T22:01:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="Enroll" duration-ms="224971" started-at="2021-05-12T22:01:30Z" data-provider="MarketConfig" finished-at="2021-05-12T22:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@68c4039c]" name="PostCondition" is-config="true" duration-ms="718" started-at="2021-05-12T22:05:15Z" finished-at="2021-05-12T22:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.PrefferedCustomer -->
      <class name="Tests.ReferralIDPassing">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.ReferralIDPassing@26653222]" name="PreConditon" is-config="true" duration-ms="3221" started-at="2021-05-12T21:25:07Z" finished-at="2021-05-12T21:25:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@26653222]" name="PassReferralID" duration-ms="255338" started-at="2021-05-12T21:25:10Z" data-provider="MarketConfig" finished-at="2021-05-12T21:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.ReferralIDPassing@26653222]" name="PostCondition" is-config="true" duration-ms="691" started-at="2021-05-12T21:29:25Z" finished-at="2021-05-12T21:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=SUCCESS method=ReferralIDPassing.PassReferralID(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@26653222] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.ReferralIDPassing@26653222]" name="PreConditon" is-config="true" duration-ms="3146" started-at="2021-05-12T21:29:26Z" finished-at="2021-05-12T21:29:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@26653222]" name="PassReferralID" duration-ms="244383" started-at="2021-05-12T21:29:29Z" data-provider="MarketConfig" finished-at="2021-05-12T21:33:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.ReferralIDPassing@26653222]" name="PostCondition" is-config="true" duration-ms="689" started-at="2021-05-12T21:33:34Z" finished-at="2021-05-12T21:33:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=SUCCESS method=ReferralIDPassing.PassReferralID(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@26653222] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.ReferralIDPassing -->
      <class name="Tests.EUBankWire">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3137" started-at="2021-05-12T20:01:13Z" finished-at="2021-05-12T20:01:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="150283" started-at="2021-05-12T20:01:16Z" data-provider="MarketConfig" finished-at="2021-05-12T20:03:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="719" started-at="2021-05-12T20:03:46Z" finished-at="2021-05-12T20:03:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3152" started-at="2021-05-12T20:03:47Z" finished-at="2021-05-12T20:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="18925" started-at="2021-05-12T20:03:50Z" data-provider="MarketConfig" finished-at="2021-05-12T20:04:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Low footer expected [WÄHLEN SIE IHREN MARKT] but found [SELECT YOUR MARKET]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Low footer expected [WÄHLEN SIE IHREN MARKT] but found [SELECT YOUR MARKET]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.StartPage.Start(StartPage.java:123)
at Pages.Start.SelectMarket(Start.java:11)
at Tests.EUBankWire.BankWire(EUBankWire.java:226)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="922" started-at="2021-05-12T20:04:09Z" finished-at="2021-05-12T20:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=FAILURE method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3221" started-at="2021-05-12T20:04:10Z" finished-at="2021-05-12T20:04:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="148424" started-at="2021-05-12T20:04:13Z" data-provider="MarketConfig" finished-at="2021-05-12T20:06:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T20:06:41Z" finished-at="2021-05-12T20:06:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3401" started-at="2021-05-12T20:06:42Z" finished-at="2021-05-12T20:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="170258" started-at="2021-05-12T20:06:46Z" data-provider="MarketConfig" finished-at="2021-05-12T20:09:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T20:09:36Z" finished-at="2021-05-12T20:09:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3341" started-at="2021-05-12T20:09:36Z" finished-at="2021-05-12T20:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="161342" started-at="2021-05-12T20:09:40Z" data-provider="MarketConfig" finished-at="2021-05-12T20:12:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="672" started-at="2021-05-12T20:12:21Z" finished-at="2021-05-12T20:12:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3485" started-at="2021-05-12T20:12:22Z" finished-at="2021-05-12T20:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="154409" started-at="2021-05-12T20:12:25Z" data-provider="MarketConfig" finished-at="2021-05-12T20:15:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Denmark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T20:15:00Z" finished-at="2021-05-12T20:15:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="4102" started-at="2021-05-12T20:15:00Z" finished-at="2021-05-12T20:15:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="153150" started-at="2021-05-12T20:15:05Z" data-provider="MarketConfig" finished-at="2021-05-12T20:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Denmark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Danish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="719" started-at="2021-05-12T20:17:38Z" finished-at="2021-05-12T20:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3460" started-at="2021-05-12T20:17:38Z" finished-at="2021-05-12T20:17:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="154809" started-at="2021-05-12T20:17:42Z" data-provider="MarketConfig" finished-at="2021-05-12T20:20:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T20:20:17Z" finished-at="2021-05-12T20:20:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3426" started-at="2021-05-12T20:20:17Z" finished-at="2021-05-12T20:20:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="62022" started-at="2021-05-12T20:20:21Z" data-provider="MarketConfig" finished-at="2021-05-12T20:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//select[contains(@ng-options, 'language')]/option[@selected = 'selected']"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:60887}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: fa1c99e767e1ebde9d867d60253b6bd6
*** Element info: {Using=xpath, value=//select[contains(@ng-options, 'language')]/option[@selected = 'selected']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//select[contains(@ng-options, 'language')]/option[@selected = 'selected']"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:60887}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: fa1c99e767e1ebde9d867d60253b6bd6
*** Element info: {Using=xpath, value=//select[contains(@ng-options, 'language')]/option[@selected = 'selected']}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.AccountSetupPage.AccountDetails(AccountSetupPage.java:275)
at Pages.Account.PersonalDetails(Account.java:13)
at Tests.EUBankWire.BankWire(EUBankWire.java:229)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="817" started-at="2021-05-12T20:21:23Z" finished-at="2021-05-12T20:21:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=FAILURE method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3188" started-at="2021-05-12T20:21:24Z" finished-at="2021-05-12T20:21:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="148223" started-at="2021-05-12T20:21:27Z" data-provider="MarketConfig" finished-at="2021-05-12T20:23:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T20:23:55Z" finished-at="2021-05-12T20:23:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3168" started-at="2021-05-12T20:23:56Z" finished-at="2021-05-12T20:23:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="124727" started-at="2021-05-12T20:23:59Z" data-provider="MarketConfig" finished-at="2021-05-12T20:26:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minor Summary Labels is Displaying expected [[Enrollment Summary, Enrollment Settings, About You, Co-Applicant - Spouse/Company, Commission Payment Options, Your Shipping Address, Your Billing Address/Primary Address, Your Payment Information, Terms and Conditions, Summary]] but found [[Payment Options, Bank Account Details, Billing Address, Shipping Address, Shipping Method, Summary]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minor Summary Labels is Displaying expected [[Enrollment Summary, Enrollment Settings, About You, Co-Applicant - Spouse/Company, Commission Payment Options, Your Shipping Address, Your Billing Address/Primary Address, Your Payment Information, Terms and Conditions, Summary]] but found [[Payment Options, Bank Account Details, Billing Address, Shipping Address, Shipping Method, Summary]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:468)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.EUBankWire.BankWire(EUBankWire.java:231)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="857" started-at="2021-05-12T20:26:04Z" finished-at="2021-05-12T20:26:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=FAILURE method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3326" started-at="2021-05-12T20:26:04Z" finished-at="2021-05-12T20:26:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="159346" started-at="2021-05-12T20:26:08Z" data-provider="MarketConfig" finished-at="2021-05-12T20:28:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hungary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T20:28:47Z" finished-at="2021-05-12T20:28:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3130" started-at="2021-05-12T20:28:48Z" finished-at="2021-05-12T20:28:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="155083" started-at="2021-05-12T20:28:51Z" data-provider="MarketConfig" finished-at="2021-05-12T20:31:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hungary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hungarian]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T20:31:26Z" finished-at="2021-05-12T20:31:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3297" started-at="2021-05-12T20:31:27Z" finished-at="2021-05-12T20:31:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="146787" started-at="2021-05-12T20:31:30Z" data-provider="MarketConfig" finished-at="2021-05-12T20:33:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Italiano]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="687" started-at="2021-05-12T20:33:57Z" finished-at="2021-05-12T20:33:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3156" started-at="2021-05-12T20:33:58Z" finished-at="2021-05-12T20:34:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="114063" started-at="2021-05-12T20:34:01Z" data-provider="MarketConfig" finished-at="2021-05-12T20:35:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minor Summary Labels is Displaying expected [[Enrollment Summary, Enrollment Settings, About You, Commission Payment Options, Your Shipping Address, Your Billing Address/Primary Address, Your Payment Information, Terms and Conditions, Summary]] but found [[Payment Options, Bank Account Details, Billing Address, Shipping Address, Shipping Method, Summary]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minor Summary Labels is Displaying expected [[Enrollment Summary, Enrollment Settings, About You, Commission Payment Options, Your Shipping Address, Your Billing Address/Primary Address, Your Payment Information, Terms and Conditions, Summary]] but found [[Payment Options, Bank Account Details, Billing Address, Shipping Address, Shipping Method, Summary]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:478)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.EUBankWire.BankWire(EUBankWire.java:231)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="796" started-at="2021-05-12T20:35:55Z" finished-at="2021-05-12T20:35:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=FAILURE method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3207" started-at="2021-05-12T20:35:56Z" finished-at="2021-05-12T20:35:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="147331" started-at="2021-05-12T20:35:59Z" data-provider="MarketConfig" finished-at="2021-05-12T20:38:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ireland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="672" started-at="2021-05-12T20:38:26Z" finished-at="2021-05-12T20:38:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3066" started-at="2021-05-12T20:38:27Z" finished-at="2021-05-12T20:38:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="151880" started-at="2021-05-12T20:38:30Z" data-provider="MarketConfig" finished-at="2021-05-12T20:41:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T20:41:02Z" finished-at="2021-05-12T20:41:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3292" started-at="2021-05-12T20:41:02Z" finished-at="2021-05-12T20:41:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="148586" started-at="2021-05-12T20:41:06Z" data-provider="MarketConfig" finished-at="2021-05-12T20:43:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="689" started-at="2021-05-12T20:43:34Z" finished-at="2021-05-12T20:43:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3051" started-at="2021-05-12T20:43:35Z" finished-at="2021-05-12T20:43:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="151637" started-at="2021-05-12T20:43:38Z" data-provider="MarketConfig" finished-at="2021-05-12T20:46:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="687" started-at="2021-05-12T20:46:10Z" finished-at="2021-05-12T20:46:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3142" started-at="2021-05-12T20:46:10Z" finished-at="2021-05-12T20:46:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="153126" started-at="2021-05-12T20:46:14Z" data-provider="MarketConfig" finished-at="2021-05-12T20:48:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="672" started-at="2021-05-12T20:48:47Z" finished-at="2021-05-12T20:48:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3056" started-at="2021-05-12T20:48:47Z" finished-at="2021-05-12T20:48:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="62168" started-at="2021-05-12T20:48:50Z" data-provider="MarketConfig" finished-at="2021-05-12T20:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//select[contains(@ng-options, 'language')]/option[@selected = 'selected']"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:61627}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ef3336e8913c817fef358c22243b6b83
*** Element info: {Using=xpath, value=//select[contains(@ng-options, 'language')]/option[@selected = 'selected']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//select[contains(@ng-options, 'language')]/option[@selected = 'selected']"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:61627}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ef3336e8913c817fef358c22243b6b83
*** Element info: {Using=xpath, value=//select[contains(@ng-options, 'language')]/option[@selected = 'selected']}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.AccountSetupPage.AccountDetails(AccountSetupPage.java:275)
at Pages.Account.PersonalDetails(Account.java:13)
at Tests.EUBankWire.BankWire(EUBankWire.java:229)
at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="775" started-at="2021-05-12T20:49:53Z" finished-at="2021-05-12T20:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=FAILURE method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3010" started-at="2021-05-12T20:49:53Z" finished-at="2021-05-12T20:49:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="147537" started-at="2021-05-12T20:49:56Z" data-provider="MarketConfig" finished-at="2021-05-12T20:52:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="673" started-at="2021-05-12T20:52:24Z" finished-at="2021-05-12T20:52:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="2969" started-at="2021-05-12T20:52:25Z" finished-at="2021-05-12T20:52:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="144033" started-at="2021-05-12T20:52:28Z" data-provider="MarketConfig" finished-at="2021-05-12T20:54:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Norwegian]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="690" started-at="2021-05-12T20:54:52Z" finished-at="2021-05-12T20:54:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3064" started-at="2021-05-12T20:54:52Z" finished-at="2021-05-12T20:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="151447" started-at="2021-05-12T20:54:55Z" data-provider="MarketConfig" finished-at="2021-05-12T20:57:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Poland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="700" started-at="2021-05-12T20:57:27Z" finished-at="2021-05-12T20:57:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3141" started-at="2021-05-12T20:57:27Z" finished-at="2021-05-12T20:57:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="149371" started-at="2021-05-12T20:57:31Z" data-provider="MarketConfig" finished-at="2021-05-12T21:00:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Poland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Polish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="719" started-at="2021-05-12T21:00:00Z" finished-at="2021-05-12T21:00:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="4760" started-at="2021-05-12T21:00:01Z" finished-at="2021-05-12T21:00:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="150719" started-at="2021-05-12T21:00:05Z" data-provider="MarketConfig" finished-at="2021-05-12T21:02:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sweden]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Svenska]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="704" started-at="2021-05-12T21:02:36Z" finished-at="2021-05-12T21:02:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3211" started-at="2021-05-12T21:02:37Z" finished-at="2021-05-12T21:02:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="153114" started-at="2021-05-12T21:02:40Z" data-provider="MarketConfig" finished-at="2021-05-12T21:05:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sweden]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="734" started-at="2021-05-12T21:05:13Z" finished-at="2021-05-12T21:05:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3287" started-at="2021-05-12T21:05:14Z" finished-at="2021-05-12T21:05:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="151183" started-at="2021-05-12T21:05:17Z" data-provider="MarketConfig" finished-at="2021-05-12T21:07:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="673" started-at="2021-05-12T21:07:48Z" finished-at="2021-05-12T21:07:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3789" started-at="2021-05-12T21:07:49Z" finished-at="2021-05-12T21:07:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="155313" started-at="2021-05-12T21:07:53Z" data-provider="MarketConfig" finished-at="2021-05-12T21:10:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-05-12T21:10:28Z" finished-at="2021-05-12T21:10:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3124" started-at="2021-05-12T21:10:29Z" finished-at="2021-05-12T21:10:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="150000" started-at="2021-05-12T21:10:32Z" data-provider="MarketConfig" finished-at="2021-05-12T21:13:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="722" started-at="2021-05-12T21:13:02Z" finished-at="2021-05-12T21:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3211" started-at="2021-05-12T21:13:03Z" finished-at="2021-05-12T21:13:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="123491" started-at="2021-05-12T21:13:06Z" data-provider="MarketConfig" finished-at="2021-05-12T21:15:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Italiano]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minor Summary Labels is Displaying expected [[Sommario Dell'Iscrizione, Enrollment Settings, Informazioni su di te, Coniuge richiedente/Compagnia, Opzioni per il Pagamento della Commissione, Il tuo indirizzo di consegna, Il tuo indirizzo di fatturazione/indirizzo primario, Le tue informazioni di pagamento, Termini e Condizioni, Sommario]] but found [[Payment Options, Dettagli del conto bancario, Indirizzo di Fatturazione, Indirizzo di spedizione, Metodo di spedizione, Sommario]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minor Summary Labels is Displaying expected [[Sommario Dell'Iscrizione, Enrollment Settings, Informazioni su di te, Coniuge richiedente/Compagnia, Opzioni per il Pagamento della Commissione, Il tuo indirizzo di consegna, Il tuo indirizzo di fatturazione/indirizzo primario, Le tue informazioni di pagamento, Termini e Condizioni, Sommario]] but found [[Payment Options, Dettagli del conto bancario, Indirizzo di Fatturazione, Indirizzo di spedizione, Metodo di spedizione, Sommario]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:463)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.EUBankWire.BankWire(EUBankWire.java:231)
at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="806" started-at="2021-05-12T21:15:09Z" finished-at="2021-05-12T21:15:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=FAILURE method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3311" started-at="2021-05-12T21:15:10Z" finished-at="2021-05-12T21:15:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="149066" started-at="2021-05-12T21:15:14Z" data-provider="MarketConfig" finished-at="2021-05-12T21:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-05-12T21:17:43Z" finished-at="2021-05-12T21:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3199" started-at="2021-05-12T21:17:43Z" finished-at="2021-05-12T21:17:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="149129" started-at="2021-05-12T21:17:46Z" data-provider="MarketConfig" finished-at="2021-05-12T21:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="687" started-at="2021-05-12T21:20:16Z" finished-at="2021-05-12T21:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3188" started-at="2021-05-12T21:20:16Z" finished-at="2021-05-12T21:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="60591" started-at="2021-05-12T21:20:19Z" data-provider="MarketConfig" finished-at="2021-05-12T21:21:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukraine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[bound must be positive]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: bound must be positive
at java.util.Random.nextInt(Random.java:388)
at POM.InitialOrderPage.Packs(InitialOrderPage.java:270)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:10)
at Tests.EUBankWire.BankWire(EUBankWire.java:227)
at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="803" started-at="2021-05-12T21:21:20Z" finished-at="2021-05-12T21:21:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=FAILURE method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="11993" started-at="2021-05-12T21:21:21Z" finished-at="2021-05-12T21:21:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="60516" started-at="2021-05-12T21:21:33Z" data-provider="MarketConfig" finished-at="2021-05-12T21:22:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukraine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[???????]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[bound must be positive]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: bound must be positive
at java.util.Random.nextInt(Random.java:388)
at POM.InitialOrderPage.Packs(InitialOrderPage.java:270)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:10)
at Tests.EUBankWire.BankWire(EUBankWire.java:227)
at sun.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="805" started-at="2021-05-12T21:22:33Z" finished-at="2021-05-12T21:22:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=FAILURE method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PreConditon" is-config="true" duration-ms="3319" started-at="2021-05-12T21:22:34Z" finished-at="2021-05-12T21:22:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="BankWire" duration-ms="148732" started-at="2021-05-12T21:22:37Z" data-provider="MarketConfig" finished-at="2021-05-12T21:25:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United Kingdom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BankWire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BankWire -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.EUBankWire@5e5792a0]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-05-12T21:25:06Z" finished-at="2021-05-12T21:25:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BankWire status=SUCCESS method=EUBankWire.BankWire(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.EUBankWire@5e5792a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.EUBankWire -->
      <class name="Tests.FranchisePartner">
        <test-method status="PASS" signature="StartReport()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="StartReport" is-config="true" duration-ms="281" started-at="2021-05-12T16:40:18Z" finished-at="2021-05-12T16:40:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartReport -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="4106" started-at="2021-05-12T16:40:18Z" finished-at="2021-05-12T16:40:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="258444" started-at="2021-05-12T16:40:22Z" data-provider="MarketConfig" finished-at="2021-05-12T16:44:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-05-12T16:44:40Z" finished-at="2021-05-12T16:44:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3125" started-at="2021-05-12T16:44:41Z" finished-at="2021-05-12T16:44:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="261233" started-at="2021-05-12T16:44:44Z" data-provider="MarketConfig" finished-at="2021-05-12T16:49:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-05-12T16:49:06Z" finished-at="2021-05-12T16:49:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3325" started-at="2021-05-12T16:49:06Z" finished-at="2021-05-12T16:49:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="266835" started-at="2021-05-12T16:49:10Z" data-provider="MarketConfig" finished-at="2021-05-12T16:53:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bahamas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-05-12T16:53:36Z" finished-at="2021-05-12T16:53:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3386" started-at="2021-05-12T16:53:37Z" finished-at="2021-05-12T16:53:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="293431" started-at="2021-05-12T16:53:41Z" data-provider="MarketConfig" finished-at="2021-05-12T16:58:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="719" started-at="2021-05-12T16:58:34Z" finished-at="2021-05-12T16:58:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3316" started-at="2021-05-12T16:58:35Z" finished-at="2021-05-12T16:58:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="300415" started-at="2021-05-12T16:58:38Z" data-provider="MarketConfig" finished-at="2021-05-12T17:03:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="735" started-at="2021-05-12T17:03:38Z" finished-at="2021-05-12T17:03:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3181" started-at="2021-05-12T17:03:39Z" finished-at="2021-05-12T17:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="192381" started-at="2021-05-12T17:03:42Z" data-provider="MarketConfig" finished-at="2021-05-12T17:06:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//li[contains(@ng-if, 'enrollerProfile')]//p[@class='ng-binding']"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:57115}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8bb2775bee5541542a98675f604851dc
*** Element info: {Using=xpath, value=//li[contains(@ng-if, 'enrollerProfile')]//p[@class='ng-binding']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//li[contains(@ng-if, 'enrollerProfile')]//p[@class='ng-binding']"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:57115}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8bb2775bee5541542a98675f604851dc
*** Element info: {Using=xpath, value=//li[contains(@ng-if, 'enrollerProfile')]//p[@class='ng-binding']}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.AccountSetupPage.AccountDetails(AccountSetupPage.java:667)
at Pages.Account.PersonalDetails(Account.java:13)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:305)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="897" started-at="2021-05-12T17:06:55Z" finished-at="2021-05-12T17:06:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3370" started-at="2021-05-12T17:06:56Z" finished-at="2021-05-12T17:06:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="264890" started-at="2021-05-12T17:06:59Z" data-provider="MarketConfig" finished-at="2021-05-12T17:11:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:57180}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 50d4474194f69d245c910a8ab6deb1e4
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:57180}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 50d4474194f69d245c910a8ab6deb1e4
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:925)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="838" started-at="2021-05-12T17:11:24Z" finished-at="2021-05-12T17:11:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3515" started-at="2021-05-12T17:11:25Z" finished-at="2021-05-12T17:11:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="212850" started-at="2021-05-12T17:11:28Z" data-provider="MarketConfig" finished-at="2021-05-12T17:15:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:57255}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 85730d1f5466fae80eaae37ea93dce8f
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:57255}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 85730d1f5466fae80eaae37ea93dce8f
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:925)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="859" started-at="2021-05-12T17:15:01Z" finished-at="2021-05-12T17:15:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3505" started-at="2021-05-12T17:15:02Z" finished-at="2021-05-12T17:15:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="219234" started-at="2021-05-12T17:15:05Z" data-provider="MarketConfig" finished-at="2021-05-12T17:18:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Colombia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Atlantico] but found [Atlántico]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Atlantico] but found [Atlántico]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.PaymentPage.ShippingDetails(PaymentPage.java:589)
at Pages.Payment.PaymentDetails(Payment.java:15)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:306)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="798" started-at="2021-05-12T17:18:45Z" finished-at="2021-05-12T17:18:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3266" started-at="2021-05-12T17:18:46Z" finished-at="2021-05-12T17:18:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="260172" started-at="2021-05-12T17:18:49Z" data-provider="MarketConfig" finished-at="2021-05-12T17:23:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Denmark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="734" started-at="2021-05-12T17:23:09Z" finished-at="2021-05-12T17:23:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3651" started-at="2021-05-12T17:23:10Z" finished-at="2021-05-12T17:23:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="258625" started-at="2021-05-12T17:23:13Z" data-provider="MarketConfig" finished-at="2021-05-12T17:27:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Denmark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Danish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T17:27:32Z" finished-at="2021-05-12T17:27:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3118" started-at="2021-05-12T17:27:33Z" finished-at="2021-05-12T17:27:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="148748" started-at="2021-05-12T17:27:36Z" data-provider="MarketConfig" finished-at="2021-05-12T17:30:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dominican Republic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Dajabon] but found [Dajabón]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Dajabon] but found [Dajabón]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.PaymentPage.ShippingDetails(PaymentPage.java:572)
at Pages.Payment.PaymentDetails(Payment.java:15)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:306)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="797" started-at="2021-05-12T17:30:05Z" finished-at="2021-05-12T17:30:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3131" started-at="2021-05-12T17:30:05Z" finished-at="2021-05-12T17:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="257409" started-at="2021-05-12T17:30:08Z" data-provider="MarketConfig" finished-at="2021-05-12T17:34:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T17:34:26Z" finished-at="2021-05-12T17:34:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3548" started-at="2021-05-12T17:34:27Z" finished-at="2021-05-12T17:34:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="299179" started-at="2021-05-12T17:34:30Z" data-provider="MarketConfig" finished-at="2021-05-12T17:39:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="719" started-at="2021-05-12T17:39:29Z" finished-at="2021-05-12T17:39:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3181" started-at="2021-05-12T17:39:30Z" finished-at="2021-05-12T17:39:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="212586" started-at="2021-05-12T17:39:33Z" data-provider="MarketConfig" finished-at="2021-05-12T17:43:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major AR Total Price is Wrong expected [154.01] but found [153.37]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major AR Total Price is Wrong expected [154.01] but found [153.37]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:883)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="829" started-at="2021-05-12T17:43:06Z" finished-at="2021-05-12T17:43:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3150" started-at="2021-05-12T17:43:07Z" finished-at="2021-05-12T17:43:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="225794" started-at="2021-05-12T17:43:10Z" data-provider="MarketConfig" finished-at="2021-05-12T17:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major AR Total Price is Wrong expected [150.49] but found [149.85]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major AR Total Price is Wrong expected [150.49] but found [149.85]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:883)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="827" started-at="2021-05-12T17:46:56Z" finished-at="2021-05-12T17:46:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3058" started-at="2021-05-12T17:46:56Z" finished-at="2021-05-12T17:46:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="267336" started-at="2021-05-12T17:46:59Z" data-provider="MarketConfig" finished-at="2021-05-12T17:51:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hungary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T17:51:27Z" finished-at="2021-05-12T17:51:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3203" started-at="2021-05-12T17:51:27Z" finished-at="2021-05-12T17:51:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="289779" started-at="2021-05-12T17:51:31Z" data-provider="MarketConfig" finished-at="2021-05-12T17:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hungary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hungarian]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="718" started-at="2021-05-12T17:56:20Z" finished-at="2021-05-12T17:56:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3075" started-at="2021-05-12T17:56:21Z" finished-at="2021-05-12T17:56:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="113922" started-at="2021-05-12T17:56:24Z" data-provider="MarketConfig" finished-at="2021-05-12T17:58:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="687" started-at="2021-05-12T17:58:18Z" finished-at="2021-05-12T17:58:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3157" started-at="2021-05-12T17:58:19Z" finished-at="2021-05-12T17:58:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="223609" started-at="2021-05-12T17:58:22Z" data-provider="MarketConfig" finished-at="2021-05-12T18:02:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Italiano]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'col-xs-5 text-right')])[5]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:58111}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 89f0553311b102fc979e76c1b62110e2
*** Element info: {Using=xpath, value=(//div[contains(@class,'col-xs-5 text-right')])[5]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'col-xs-5 text-right')])[5]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:58111}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 89f0553311b102fc979e76c1b62110e2
*** Element info: {Using=xpath, value=(//div[contains(@class,'col-xs-5 text-right')])[5]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:402)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="822" started-at="2021-05-12T18:02:06Z" finished-at="2021-05-12T18:02:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3332" started-at="2021-05-12T18:02:06Z" finished-at="2021-05-12T18:02:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="219957" started-at="2021-05-12T18:02:10Z" data-provider="MarketConfig" finished-at="2021-05-12T18:05:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'col-xs-5 text-right')])[5]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:58189}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 651101d503d8ef1de8bf45ec7a029867
*** Element info: {Using=xpath, value=(//div[contains(@class,'col-xs-5 text-right')])[5]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'col-xs-5 text-right')])[5]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:58189}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 651101d503d8ef1de8bf45ec7a029867
*** Element info: {Using=xpath, value=(//div[contains(@class,'col-xs-5 text-right')])[5]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:402)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="827" started-at="2021-05-12T18:05:50Z" finished-at="2021-05-12T18:05:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3308" started-at="2021-05-12T18:05:51Z" finished-at="2021-05-12T18:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="253331" started-at="2021-05-12T18:05:54Z" data-provider="MarketConfig" finished-at="2021-05-12T18:10:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ireland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T18:10:07Z" finished-at="2021-05-12T18:10:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3602" started-at="2021-05-12T18:10:08Z" finished-at="2021-05-12T18:10:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="245865" started-at="2021-05-12T18:10:12Z" data-provider="MarketConfig" finished-at="2021-05-12T18:14:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jamaica]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="719" started-at="2021-05-12T18:14:17Z" finished-at="2021-05-12T18:14:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3173" started-at="2021-05-12T18:14:18Z" finished-at="2021-05-12T18:14:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="258576" started-at="2021-05-12T18:14:21Z" data-provider="MarketConfig" finished-at="2021-05-12T18:18:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="718" started-at="2021-05-12T18:18:40Z" finished-at="2021-05-12T18:18:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3270" started-at="2021-05-12T18:18:41Z" finished-at="2021-05-12T18:18:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="284442" started-at="2021-05-12T18:18:44Z" data-provider="MarketConfig" finished-at="2021-05-12T18:23:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-05-12T18:23:28Z" finished-at="2021-05-12T18:23:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3062" started-at="2021-05-12T18:23:29Z" finished-at="2021-05-12T18:23:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="288194" started-at="2021-05-12T18:23:32Z" data-provider="MarketConfig" finished-at="2021-05-12T18:28:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T18:28:20Z" finished-at="2021-05-12T18:28:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3171" started-at="2021-05-12T18:28:21Z" finished-at="2021-05-12T18:28:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="278878" started-at="2021-05-12T18:28:24Z" data-provider="MarketConfig" finished-at="2021-05-12T18:33:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mexico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-05-12T18:33:03Z" finished-at="2021-05-12T18:33:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3217" started-at="2021-05-12T18:33:04Z" finished-at="2021-05-12T18:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="269547" started-at="2021-05-12T18:33:07Z" data-provider="MarketConfig" finished-at="2021-05-12T18:37:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:58719}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c8f89f26651d856623ee23d622a15ea2
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:58719}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c8f89f26651d856623ee23d622a15ea2
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:925)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="833" started-at="2021-05-12T18:37:36Z" finished-at="2021-05-12T18:37:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3048" started-at="2021-05-12T18:37:37Z" finished-at="2021-05-12T18:37:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="296868" started-at="2021-05-12T18:37:40Z" data-provider="MarketConfig" finished-at="2021-05-12T18:42:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="750" started-at="2021-05-12T18:42:37Z" finished-at="2021-05-12T18:42:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3363" started-at="2021-05-12T18:42:38Z" finished-at="2021-05-12T18:42:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="280348" started-at="2021-05-12T18:42:41Z" data-provider="MarketConfig" finished-at="2021-05-12T18:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="734" started-at="2021-05-12T18:47:22Z" finished-at="2021-05-12T18:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3507" started-at="2021-05-12T18:47:22Z" finished-at="2021-05-12T18:47:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="60456" started-at="2021-05-12T18:47:26Z" data-provider="MarketConfig" finished-at="2021-05-12T18:48:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major NOPack Click Here]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major NOPack Click Here
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:768)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:303)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="756" started-at="2021-05-12T18:48:26Z" finished-at="2021-05-12T18:48:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3247" started-at="2021-05-12T18:48:27Z" finished-at="2021-05-12T18:48:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="107129" started-at="2021-05-12T18:48:30Z" data-provider="MarketConfig" finished-at="2021-05-12T18:50:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Norwegian]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major pv on pack expected [86] but found [86å]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major pv on pack expected [86] but found [86å]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.InitialOrderPage.Packs(InitialOrderPage.java:486)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:10)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:303)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="781" started-at="2021-05-12T18:50:17Z" finished-at="2021-05-12T18:50:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3435" started-at="2021-05-12T18:50:18Z" finished-at="2021-05-12T18:50:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="219494" started-at="2021-05-12T18:50:22Z" data-provider="MarketConfig" finished-at="2021-05-12T18:54:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Poland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="734" started-at="2021-05-12T18:54:01Z" finished-at="2021-05-12T18:54:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3220" started-at="2021-05-12T18:54:02Z" finished-at="2021-05-12T18:54:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="213045" started-at="2021-05-12T18:54:05Z" data-provider="MarketConfig" finished-at="2021-05-12T18:57:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Poland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Polish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="720" started-at="2021-05-12T18:57:38Z" finished-at="2021-05-12T18:57:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3771" started-at="2021-05-12T18:57:39Z" finished-at="2021-05-12T18:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="254709" started-at="2021-05-12T18:57:43Z" data-provider="MarketConfig" finished-at="2021-05-12T19:01:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:59175}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 15c71d8002f4bb5221c588263d289a44
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:59175}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 15c71d8002f4bb5221c588263d289a44
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:925)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="844" started-at="2021-05-12T19:01:57Z" finished-at="2021-05-12T19:01:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3517" started-at="2021-05-12T19:01:58Z" finished-at="2021-05-12T19:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="256295" started-at="2021-05-12T19:02:02Z" data-provider="MarketConfig" finished-at="2021-05-12T19:06:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:59258}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e2ae54fed3d15806f1287e023499c19b
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//p[@ng-if='bean.order_number']//strong)[2]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:59258}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e2ae54fed3d15806f1287e023499c19b
*** Element info: {Using=xpath, value=(//p[@ng-if='bean.order_number']//strong)[2]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:925)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="850" started-at="2021-05-12T19:06:18Z" finished-at="2021-05-12T19:06:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3367" started-at="2021-05-12T19:06:19Z" finished-at="2021-05-12T19:06:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="251562" started-at="2021-05-12T19:06:22Z" data-provider="MarketConfig" finished-at="2021-05-12T19:10:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sweden]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Svenska]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-05-12T19:10:34Z" finished-at="2021-05-12T19:10:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3195" started-at="2021-05-12T19:10:35Z" finished-at="2021-05-12T19:10:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="266003" started-at="2021-05-12T19:10:38Z" data-provider="MarketConfig" finished-at="2021-05-12T19:15:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sweden]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="719" started-at="2021-05-12T19:15:04Z" finished-at="2021-05-12T19:15:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3455" started-at="2021-05-12T19:15:04Z" finished-at="2021-05-12T19:15:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="263885" started-at="2021-05-12T19:15:08Z" data-provider="MarketConfig" finished-at="2021-05-12T19:19:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="719" started-at="2021-05-12T19:19:32Z" finished-at="2021-05-12T19:19:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3239" started-at="2021-05-12T19:19:32Z" finished-at="2021-05-12T19:19:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="264667" started-at="2021-05-12T19:19:36Z" data-provider="MarketConfig" finished-at="2021-05-12T19:24:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="734" started-at="2021-05-12T19:24:00Z" finished-at="2021-05-12T19:24:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3728" started-at="2021-05-12T19:24:01Z" finished-at="2021-05-12T19:24:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="235970" started-at="2021-05-12T19:24:05Z" data-provider="MarketConfig" finished-at="2021-05-12T19:28:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Français]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'col-xs-5 text-right')])[5]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:59670}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: b4077dd55621653fa2bde77797a35626
*** Element info: {Using=xpath, value=(//div[contains(@class,'col-xs-5 text-right')])[5]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'col-xs-5 text-right')])[5]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:59670}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: b4077dd55621653fa2bde77797a35626
*** Element info: {Using=xpath, value=(//div[contains(@class,'col-xs-5 text-right')])[5]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:402)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="821" started-at="2021-05-12T19:28:01Z" finished-at="2021-05-12T19:28:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3069" started-at="2021-05-12T19:28:02Z" finished-at="2021-05-12T19:28:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="230998" started-at="2021-05-12T19:28:05Z" data-provider="MarketConfig" finished-at="2021-05-12T19:31:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Italiano]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'col-xs-5 text-right')])[5]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:59746}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 63b2ef542ee2eb91bc9d5f8955badb36
*** Element info: {Using=xpath, value=(//div[contains(@class,'col-xs-5 text-right')])[5]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(@class,'col-xs-5 text-right')])[5]"}
  (Session info: chrome=90.0.4430.85)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'QASERVER01', ip: '10.2.0.23', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\sumancb\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:59746}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 63b2ef542ee2eb91bc9d5f8955badb36
*** Element info: {Using=xpath, value=(//div[contains(@class,'col-xs-5 text-right')])[5]}
at sun.reflect.GeneratedConstructorAccessor15.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:402)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:307)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="817" started-at="2021-05-12T19:31:56Z" finished-at="2021-05-12T19:31:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3069" started-at="2021-05-12T19:31:57Z" finished-at="2021-05-12T19:32:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="257262" started-at="2021-05-12T19:32:00Z" data-provider="MarketConfig" finished-at="2021-05-12T19:36:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="687" started-at="2021-05-12T19:36:17Z" finished-at="2021-05-12T19:36:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3059" started-at="2021-05-12T19:36:18Z" finished-at="2021-05-12T19:36:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="257552" started-at="2021-05-12T19:36:21Z" data-provider="MarketConfig" finished-at="2021-05-12T19:40:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-05-12T19:40:38Z" finished-at="2021-05-12T19:40:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3245" started-at="2021-05-12T19:40:39Z" finished-at="2021-05-12T19:40:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="284022" started-at="2021-05-12T19:40:42Z" data-provider="MarketConfig" finished-at="2021-05-12T19:45:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="688" started-at="2021-05-12T19:45:26Z" finished-at="2021-05-12T19:45:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3300" started-at="2021-05-12T19:45:27Z" finished-at="2021-05-12T19:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="254953" started-at="2021-05-12T19:45:30Z" data-provider="MarketConfig" finished-at="2021-05-12T19:49:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Español]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="719" started-at="2021-05-12T19:49:45Z" finished-at="2021-05-12T19:49:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3136" started-at="2021-05-12T19:49:46Z" finished-at="2021-05-12T19:49:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="112735" started-at="2021-05-12T19:49:49Z" data-provider="MarketConfig" finished-at="2021-05-12T19:51:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Turkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="672" started-at="2021-05-12T19:51:42Z" finished-at="2021-05-12T19:51:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3067" started-at="2021-05-12T19:51:42Z" finished-at="2021-05-12T19:51:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="112349" started-at="2021-05-12T19:51:45Z" data-provider="MarketConfig" finished-at="2021-05-12T19:53:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Turkey]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Türkçe]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="672" started-at="2021-05-12T19:53:38Z" finished-at="2021-05-12T19:53:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3451" started-at="2021-05-12T19:53:38Z" finished-at="2021-05-12T19:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="90572" started-at="2021-05-12T19:53:42Z" data-provider="MarketConfig" finished-at="2021-05-12T19:55:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukraine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:688)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:303)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="837" started-at="2021-05-12T19:55:12Z" finished-at="2021-05-12T19:55:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3268" started-at="2021-05-12T19:55:13Z" finished-at="2021-05-12T19:55:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="90531" started-at="2021-05-12T19:55:17Z" data-provider="MarketConfig" finished-at="2021-05-12T19:56:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukraine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[???????]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Critical A-Z section not displaying]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Critical A-Z section not displaying
at org.testng.Assert.fail(Assert.java:96)
at POM.InitialOrderPage.AdditionalProducts(InitialOrderPage.java:688)
at Pages.InitialOrder.PacksChecking(InitialOrder.java:11)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:303)
at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="767" started-at="2021-05-12T19:56:47Z" finished-at="2021-05-12T19:56:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PreConditon" is-config="true" duration-ms="3095" started-at="2021-05-12T19:56:48Z" finished-at="2021-05-12T19:56:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="Enroll" duration-ms="260996" started-at="2021-05-12T19:56:51Z" data-provider="MarketConfig" finished-at="2021-05-12T20:01:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United Kingdom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="PostCondition" is-config="true" duration-ms="703" started-at="2021-05-12T20:01:12Z" finished-at="2021-05-12T20:01:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:Tests.FranchisePartner@3ffc5af1]" name="afterSuite" is-config="true" duration-ms="3459" started-at="2021-05-12T22:05:16Z" finished-at="2021-05-12T22:05:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Tests.FranchisePartner -->
      <class name="Tests.INDReferralIDPassing">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.INDReferralIDPassing@3532ec19]" name="PreConditon" is-config="true" duration-ms="3144" started-at="2021-05-12T21:33:34Z" finished-at="2021-05-12T21:33:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="INDPassReferralID(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.INDReferralIDPassing@3532ec19]" name="INDPassReferralID" duration-ms="107968" started-at="2021-05-12T21:33:38Z" data-provider="MarketConfig" finished-at="2021-05-12T21:35:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[CreditCard]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- INDPassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.INDReferralIDPassing@3532ec19]" name="PostCondition" is-config="true" duration-ms="670" started-at="2021-05-12T21:35:25Z" finished-at="2021-05-12T21:35:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=INDPassReferralID status=SUCCESS method=INDReferralIDPassing.INDPassReferralID(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.INDReferralIDPassing@3532ec19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.INDReferralIDPassing -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
