<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="38" ignored="10" total="84" passed="36">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="17724092" started-at="2020-03-01T16:40:15Z" finished-at="2020-03-01T21:35:39Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="17724092" started-at="2020-03-01T16:40:15Z" finished-at="2020-03-01T21:35:39Z">
      <class name="Tests.Fit">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@59fa1d9b]" name="PreConditon" is-config="true" duration-ms="5961" started-at="2020-03-01T20:59:42Z" finished-at="2020-03-01T20:59:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@59fa1d9b]" name="GetFit" duration-ms="121382" started-at="2020-03-01T20:59:48Z" data-provider="MarketConfig" finished-at="2020-03-01T21:01:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United Kingdom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@59fa1d9b]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-01T21:01:49Z" finished-at="2020-03-01T21:01:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=SUCCESS method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@59fa1d9b]" name="PreConditon" is-config="true" duration-ms="6578" started-at="2020-03-01T21:01:50Z" finished-at="2020-03-01T21:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@59fa1d9b]" name="GetFit" duration-ms="151534" started-at="2020-03-01T21:01:57Z" data-provider="MarketConfig" finished-at="2020-03-01T21:04:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Low address2 expected [null] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Low address2 expected [null] but found []
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.GetFitOrderSubmit(SummaryPage.java:2981)
at Pages.Summary.GetFitSummaryDetails(Summary.java:24)
at Tests.Fit.GetFit(Fit.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@59fa1d9b]" name="PostCondition" is-config="true" duration-ms="910" started-at="2020-03-01T21:04:28Z" finished-at="2020-03-01T21:04:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=FAILURE method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@59fa1d9b]" name="PreConditon" is-config="true" duration-ms="6082" started-at="2020-03-01T21:04:29Z" finished-at="2020-03-01T21:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@59fa1d9b]" name="GetFit" duration-ms="113666" started-at="2020-03-01T21:04:35Z" data-provider="MarketConfig" finished-at="2020-03-01T21:06:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.GetFitOrderSubmit(SummaryPage.java:2533)
at Pages.Summary.GetFitSummaryDetails(Summary.java:24)
at Tests.Fit.GetFit(Fit.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@59fa1d9b]" name="PostCondition" is-config="true" duration-ms="901" started-at="2020-03-01T21:06:29Z" finished-at="2020-03-01T21:06:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=FAILURE method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@59fa1d9b]" name="PreConditon" is-config="true" duration-ms="6080" started-at="2020-03-01T21:06:30Z" finished-at="2020-03-01T21:06:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@59fa1d9b]" name="GetFit" duration-ms="96699" started-at="2020-03-01T21:06:36Z" data-provider="MarketConfig" finished-at="2020-03-01T21:08:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FranÃ§ais]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.GetFitOrderSubmit(SummaryPage.java:2533)
at Pages.Summary.GetFitSummaryDetails(Summary.java:24)
at Tests.Fit.GetFit(Fit.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@59fa1d9b]" name="PostCondition" is-config="true" duration-ms="907" started-at="2020-03-01T21:08:13Z" finished-at="2020-03-01T21:08:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=FAILURE method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.Fit@59fa1d9b]" name="PreConditon" is-config="true" duration-ms="6052" started-at="2020-03-01T21:08:13Z" finished-at="2020-03-01T21:08:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@59fa1d9b]" name="GetFit" duration-ms="158705" started-at="2020-03-01T21:08:20Z" data-provider="MarketConfig" finished-at="2020-03-01T21:10:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Low address2 expected [null] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Low address2 expected [null] but found []
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.GetFitOrderSubmit(SummaryPage.java:2981)
at Pages.Summary.GetFitSummaryDetails(Summary.java:24)
at Tests.Fit.GetFit(Fit.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFit -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.Fit@59fa1d9b]" name="PostCondition" is-config="true" duration-ms="935" started-at="2020-03-01T21:10:58Z" finished-at="2020-03-01T21:10:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetFit status=FAILURE method=Fit.GetFit(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.Fit@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.Fit -->
      <class name="Tests.PrefferedCustomer">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PreConditon" is-config="true" duration-ms="6394" started-at="2020-03-01T20:26:47Z" finished-at="2020-03-01T20:26:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="Enroll" duration-ms="238527" started-at="2020-03-01T20:26:53Z" data-provider="MarketConfig" finished-at="2020-03-01T20:30:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bahamas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [en-BS]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [en-BS]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PostCondition" is-config="true" duration-ms="937" started-at="2020-03-01T20:30:52Z" finished-at="2020-03-01T20:30:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PreConditon" is-config="true" duration-ms="5761" started-at="2020-03-01T20:30:53Z" finished-at="2020-03-01T20:30:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="Enroll" duration-ms="189516" started-at="2020-03-01T20:30:58Z" data-provider="MarketConfig" finished-at="2020-03-01T20:34:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [en-CA]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [en-CA]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PostCondition" is-config="true" duration-ms="948" started-at="2020-03-01T20:34:08Z" finished-at="2020-03-01T20:34:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PreConditon" is-config="true" duration-ms="5755" started-at="2020-03-01T20:34:09Z" finished-at="2020-03-01T20:34:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="Enroll" duration-ms="164564" started-at="2020-03-01T20:34:15Z" data-provider="MarketConfig" finished-at="2020-03-01T20:36:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FranÃ§ais]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [fr-CA]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [fr-CA]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PostCondition" is-config="true" duration-ms="936" started-at="2020-03-01T20:36:59Z" finished-at="2020-03-01T20:37:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PreConditon" is-config="true" duration-ms="7014" started-at="2020-03-01T20:37:00Z" finished-at="2020-03-01T20:37:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="Enroll" duration-ms="140274" started-at="2020-03-01T20:37:07Z" data-provider="MarketConfig" finished-at="2020-03-01T20:39:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Colombia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [es-CO]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [es-CO]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PostCondition" is-config="true" duration-ms="917" started-at="2020-03-01T20:39:27Z" finished-at="2020-03-01T20:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PreConditon" is-config="true" duration-ms="6123" started-at="2020-03-01T20:39:28Z" finished-at="2020-03-01T20:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="Enroll" duration-ms="215834" started-at="2020-03-01T20:39:34Z" data-provider="MarketConfig" finished-at="2020-03-01T20:43:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dominican Republic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [es-DO]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [es-DO]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PostCondition" is-config="true" duration-ms="988" started-at="2020-03-01T20:43:10Z" finished-at="2020-03-01T20:43:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PreConditon" is-config="true" duration-ms="5918" started-at="2020-03-01T20:43:11Z" finished-at="2020-03-01T20:43:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="Enroll" duration-ms="172035" started-at="2020-03-01T20:43:17Z" data-provider="MarketConfig" finished-at="2020-03-01T20:46:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mexico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [es-MX]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [es-MX]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PostCondition" is-config="true" duration-ms="942" started-at="2020-03-01T20:46:09Z" finished-at="2020-03-01T20:46:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PreConditon" is-config="true" duration-ms="5396" started-at="2020-03-01T20:46:10Z" finished-at="2020-03-01T20:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="Enroll" duration-ms="174043" started-at="2020-03-01T20:46:15Z" data-provider="MarketConfig" finished-at="2020-03-01T20:49:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [en-PR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [en-PR]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PostCondition" is-config="true" duration-ms="956" started-at="2020-03-01T20:49:10Z" finished-at="2020-03-01T20:49:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PreConditon" is-config="true" duration-ms="5762" started-at="2020-03-01T20:49:10Z" finished-at="2020-03-01T20:49:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="Enroll" duration-ms="176172" started-at="2020-03-01T20:49:16Z" data-provider="MarketConfig" finished-at="2020-03-01T20:52:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [es-PR]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [es-PR]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PostCondition" is-config="true" duration-ms="962" started-at="2020-03-01T20:52:12Z" finished-at="2020-03-01T20:52:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PreConditon" is-config="true" duration-ms="6380" started-at="2020-03-01T20:52:13Z" finished-at="2020-03-01T20:52:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="Enroll" duration-ms="207868" started-at="2020-03-01T20:52:20Z" data-provider="MarketConfig" finished-at="2020-03-01T20:55:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [en-US]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [en-US]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PostCondition" is-config="true" duration-ms="914" started-at="2020-03-01T20:55:48Z" finished-at="2020-03-01T20:55:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PreConditon" is-config="true" duration-ms="6341" started-at="2020-03-01T20:55:49Z" finished-at="2020-03-01T20:55:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="Enroll" duration-ms="226330" started-at="2020-03-01T20:55:55Z" data-provider="MarketConfig" finished-at="2020-03-01T20:59:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [es-US]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [es-US]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PrefferedCustomer.Enroll(PrefferedCustomer.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PrefferedCustomer@d8355a8]" name="PostCondition" is-config="true" duration-ms="912" started-at="2020-03-01T20:59:41Z" finished-at="2020-03-01T20:59:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=PrefferedCustomer.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PrefferedCustomer@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.PrefferedCustomer -->
      <class name="Tests.PatientPortal">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@28d25987]" name="PreConditon" is-config="true" duration-ms="6093" started-at="2020-03-01T21:10:59Z" finished-at="2020-03-01T21:11:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@28d25987]" name="Patient" duration-ms="227041" started-at="2020-03-01T21:11:05Z" data-provider="MarketConfig" finished-at="2020-03-01T21:14:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [en-US]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [en-US]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PatientPortal.Patient(PatientPortal.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@28d25987]" name="PostCondition" is-config="true" duration-ms="906" started-at="2020-03-01T21:14:52Z" finished-at="2020-03-01T21:14:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=FAILURE method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@28d25987]" name="PreConditon" is-config="true" duration-ms="6805" started-at="2020-03-01T21:14:53Z" finished-at="2020-03-01T21:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@28d25987]" name="Patient" duration-ms="194187" started-at="2020-03-01T21:15:00Z" data-provider="MarketConfig" finished-at="2020-03-01T21:18:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [es-US]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [es-US]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PatientPortal.Patient(PatientPortal.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@28d25987]" name="PostCondition" is-config="true" duration-ms="933" started-at="2020-03-01T21:18:14Z" finished-at="2020-03-01T21:18:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=FAILURE method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@28d25987]" name="PreConditon" is-config="true" duration-ms="5537" started-at="2020-03-01T21:18:15Z" finished-at="2020-03-01T21:18:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@28d25987]" name="Patient" duration-ms="165823" started-at="2020-03-01T21:18:21Z" data-provider="MarketConfig" finished-at="2020-03-01T21:21:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [empty] but found [en-CA]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [empty] but found [en-CA]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1771)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PatientPortal.Patient(PatientPortal.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@28d25987]" name="PostCondition" is-config="true" duration-ms="940" started-at="2020-03-01T21:21:06Z" finished-at="2020-03-01T21:21:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=FAILURE method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.PatientPortal@28d25987]" name="PreConditon" is-config="true" duration-ms="6098" started-at="2020-03-01T21:21:07Z" finished-at="2020-03-01T21:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@28d25987]" name="Patient" duration-ms="141142" started-at="2020-03-01T21:21:14Z" data-provider="MarketConfig" finished-at="2020-03-01T21:23:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FranÃ§ais]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minor Summary Labels is Displaying expected [[RÃ©sumÃ© d'inscription, ParamÃ¨tres d'inscription, Ã Propos de Vous, Votre Adresse de livraison/Adresse principale, Votre Adresse de Facturation, Votre conditions de vente, RÃ©sumÃ©]] but found [[des informations de carte de crÃ©dit, Votre Adresse de Facturation, Adresse de livraison/Adresse principale, mÃ©thode d'expÃ©dition, RÃ©sumÃ©]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minor Summary Labels is Displaying expected [[RÃ©sumÃ© d'inscription, ParamÃ¨tres d'inscription, Ã Propos de Vous, Votre Adresse de livraison/Adresse principale, Votre Adresse de Facturation, Votre conditions de vente, RÃ©sumÃ©]] but found [[des informations de carte de crÃ©dit, Votre Adresse de Facturation, Adresse de livraison/Adresse principale, mÃ©thode d'expÃ©dition, RÃ©sumÃ©]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.PCOrderSubmit(SummaryPage.java:1603)
at Pages.Summary.PCSummaryDetails(Summary.java:19)
at Tests.PatientPortal.Patient(PatientPortal.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.PatientPortal@28d25987]" name="PostCondition" is-config="true" duration-ms="967" started-at="2020-03-01T21:23:35Z" finished-at="2020-03-01T21:23:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Patient status=FAILURE method=PatientPortal.Patient(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.PatientPortal@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.PatientPortal -->
      <class name="Tests.ReferralIDPassing">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.ReferralIDPassing@46d56d67]" name="PreConditon" is-config="true" duration-ms="6961" started-at="2020-03-01T20:17:25Z" finished-at="2020-03-01T20:17:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@46d56d67]" name="PassReferralID" duration-ms="281179" started-at="2020-03-01T20:17:32Z" data-provider="MarketConfig" finished-at="2020-03-01T20:22:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.ReferralIDPassing@46d56d67]" name="PostCondition" is-config="true" duration-ms="621" started-at="2020-03-01T20:22:13Z" finished-at="2020-03-01T20:22:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=SUCCESS method=ReferralIDPassing.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.ReferralIDPassing@46d56d67]" name="PreConditon" is-config="true" duration-ms="6404" started-at="2020-03-01T20:22:14Z" finished-at="2020-03-01T20:22:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@46d56d67]" name="PassReferralID" duration-ms="266068" started-at="2020-03-01T20:22:20Z" data-provider="MarketConfig" finished-at="2020-03-01T20:26:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.ReferralIDPassing@46d56d67]" name="PostCondition" is-config="true" duration-ms="637" started-at="2020-03-01T20:26:46Z" finished-at="2020-03-01T20:26:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=SUCCESS method=ReferralIDPassing.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.ReferralIDPassing@46d56d67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.ReferralIDPassing -->
      <class name="Tests.FranchisePartner">
        <test-method status="PASS" signature="StartReport()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="StartReport" is-config="true" duration-ms="109" started-at="2020-03-01T16:40:15Z" finished-at="2020-03-01T16:40:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartReport -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="8184" started-at="2020-03-01T16:40:16Z" finished-at="2020-03-01T16:40:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="326053" started-at="2020-03-01T16:40:24Z" data-provider="MarketConfig" finished-at="2020-03-01T16:45:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="687" started-at="2020-03-01T16:45:50Z" finished-at="2020-03-01T16:45:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5894" started-at="2020-03-01T16:45:50Z" finished-at="2020-03-01T16:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="311668" started-at="2020-03-01T16:45:56Z" data-provider="MarketConfig" finished-at="2020-03-01T16:51:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Austria]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [AT] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [AT] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:1011)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="1279" started-at="2020-03-01T16:51:08Z" finished-at="2020-03-01T16:51:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5814" started-at="2020-03-01T16:51:09Z" finished-at="2020-03-01T16:51:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="301773" started-at="2020-03-01T16:51:15Z" data-provider="MarketConfig" finished-at="2020-03-01T16:56:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bahamas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="672" started-at="2020-03-01T16:56:17Z" finished-at="2020-03-01T16:56:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5512" started-at="2020-03-01T16:56:18Z" finished-at="2020-03-01T16:56:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="315737" started-at="2020-03-01T16:56:23Z" data-provider="MarketConfig" finished-at="2020-03-01T17:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FranÃ§ais]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [BE] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [BE] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:1011)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="1241" started-at="2020-03-01T17:01:39Z" finished-at="2020-03-01T17:01:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6199" started-at="2020-03-01T17:01:40Z" finished-at="2020-03-01T17:01:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="329466" started-at="2020-03-01T17:01:46Z" data-provider="MarketConfig" finished-at="2020-03-01T17:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-01T17:07:16Z" finished-at="2020-03-01T17:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="7027" started-at="2020-03-01T17:07:16Z" finished-at="2020-03-01T17:07:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="330668" started-at="2020-03-01T17:07:23Z" data-provider="MarketConfig" finished-at="2020-03-01T17:12:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Belgium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-01T17:12:54Z" finished-at="2020-03-01T17:12:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5777" started-at="2020-03-01T17:12:55Z" finished-at="2020-03-01T17:13:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="177495" started-at="2020-03-01T17:13:00Z" data-provider="MarketConfig" finished-at="2020-03-01T17:15:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Total Price is Wrong expected [451.7] but found [457.7]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Total Price is Wrong expected [451.7] but found [457.7]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:732)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="969" started-at="2020-03-01T17:15:58Z" finished-at="2020-03-01T17:15:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6423" started-at="2020-03-01T17:15:59Z" finished-at="2020-03-01T17:16:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="178801" started-at="2020-03-01T17:16:05Z" data-provider="MarketConfig" finished-at="2020-03-01T17:19:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FranÃ§ais]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major AR Total Price is Wrong expected [288.4] but found [294.4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major AR Total Price is Wrong expected [288.4] but found [294.4]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:748)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="954" started-at="2020-03-01T17:19:04Z" finished-at="2020-03-01T17:19:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5890" started-at="2020-03-01T17:19:05Z" finished-at="2020-03-01T17:19:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="209131" started-at="2020-03-01T17:19:11Z" data-provider="MarketConfig" finished-at="2020-03-01T17:22:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Colombia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major zip code expected [null] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major zip code expected [null] but found []
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:872)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="936" started-at="2020-03-01T17:22:40Z" finished-at="2020-03-01T17:22:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6042" started-at="2020-03-01T17:22:41Z" finished-at="2020-03-01T17:22:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="314735" started-at="2020-03-01T17:22:47Z" data-provider="MarketConfig" finished-at="2020-03-01T17:28:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Denmark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="656" started-at="2020-03-01T17:28:02Z" finished-at="2020-03-01T17:28:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="7402" started-at="2020-03-01T17:28:02Z" finished-at="2020-03-01T17:28:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="318667" started-at="2020-03-01T17:28:10Z" data-provider="MarketConfig" finished-at="2020-03-01T17:33:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Denmark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Danish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-01T17:33:29Z" finished-at="2020-03-01T17:33:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5143" started-at="2020-03-01T17:33:29Z" finished-at="2020-03-01T17:33:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="316194" started-at="2020-03-01T17:33:34Z" data-provider="MarketConfig" finished-at="2020-03-01T17:38:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dominican Republic]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-01T17:38:50Z" finished-at="2020-03-01T17:38:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5387" started-at="2020-03-01T17:38:51Z" finished-at="2020-03-01T17:38:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="192274" started-at="2020-03-01T17:38:57Z" data-provider="MarketConfig" finished-at="2020-03-01T17:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FranÃ§ais]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Quotes Call Packs is not Displaying: lists don't have the same size expected [74] but found [73]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Quotes Call Packs is not Displaying: lists don't have the same size expected [74] but found [73]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:819)
at POM.AutoRefillPage.AutoRefill(AutoRefillPage.java:156)
at Pages.AutoRefill.ARPacks(AutoRefill.java:8)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:250)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="984" started-at="2020-03-01T17:42:09Z" finished-at="2020-03-01T17:42:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6617" started-at="2020-03-01T17:42:10Z" finished-at="2020-03-01T17:42:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="285555" started-at="2020-03-01T17:42:16Z" data-provider="MarketConfig" finished-at="2020-03-01T17:47:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [FR] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [FR] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:1011)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="960" started-at="2020-03-01T17:47:02Z" finished-at="2020-03-01T17:47:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5994" started-at="2020-03-01T17:47:03Z" finished-at="2020-03-01T17:47:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="318766" started-at="2020-03-01T17:47:09Z" data-provider="MarketConfig" finished-at="2020-03-01T17:52:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-01T17:52:28Z" finished-at="2020-03-01T17:52:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5601" started-at="2020-03-01T17:52:28Z" finished-at="2020-03-01T17:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="333205" started-at="2020-03-01T17:52:34Z" data-provider="MarketConfig" finished-at="2020-03-01T17:58:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-01T17:58:07Z" finished-at="2020-03-01T17:58:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6996" started-at="2020-03-01T17:58:08Z" finished-at="2020-03-01T17:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="308963" started-at="2020-03-01T17:58:15Z" data-provider="MarketConfig" finished-at="2020-03-01T18:03:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hungary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="656" started-at="2020-03-01T18:03:24Z" finished-at="2020-03-01T18:03:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6087" started-at="2020-03-01T18:03:24Z" finished-at="2020-03-01T18:03:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="214752" started-at="2020-03-01T18:03:30Z" data-provider="MarketConfig" finished-at="2020-03-01T18:07:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hungary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hungarian]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Quotes Call Packs is not Displaying: lists don't have the same size expected [70] but found [69]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Quotes Call Packs is not Displaying: lists don't have the same size expected [70] but found [69]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:819)
at POM.AutoRefillPage.AutoRefill(AutoRefillPage.java:156)
at Pages.AutoRefill.ARPacks(AutoRefill.java:8)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:250)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="966" started-at="2020-03-01T18:07:05Z" finished-at="2020-03-01T18:07:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5914" started-at="2020-03-01T18:07:06Z" finished-at="2020-03-01T18:07:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="106377" started-at="2020-03-01T18:07:12Z" data-provider="MarketConfig" finished-at="2020-03-01T18:08:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="610" started-at="2020-03-01T18:08:58Z" finished-at="2020-03-01T18:08:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5978" started-at="2020-03-01T18:08:59Z" finished-at="2020-03-01T18:09:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="272087" started-at="2020-03-01T18:09:05Z" data-provider="MarketConfig" finished-at="2020-03-01T18:13:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Italiano]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minor Summary Labels is Displaying expected [[Sommario Dell'Iscrizione, Impostazioni di Iscrizione, A proposito di te, Opzioni per il Pagamento della Commissione, Il tuo indirizzo di consegna, Il tuo indirizzo di fatturazione/indirizzo primario, Le tue informazioni di pagamento, Termini e Condizioni, Sommario]] but found [[Informazioni Della Carta di Credito, Indirizzo di Fatturazione, Indirizzo di spedizione, Metodo di spedizione, Sommario]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minor Summary Labels is Displaying expected [[Sommario Dell'Iscrizione, Impostazioni di Iscrizione, A proposito di te, Opzioni per il Pagamento della Commissione, Il tuo indirizzo di consegna, Il tuo indirizzo di fatturazione/indirizzo primario, Le tue informazioni di pagamento, Termini e Condizioni, Sommario]] but found [[Informazioni Della Carta di Credito, Indirizzo di Fatturazione, Indirizzo di spedizione, Metodo di spedizione, Sommario]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:448)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="918" started-at="2020-03-01T18:13:37Z" finished-at="2020-03-01T18:13:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5706" started-at="2020-03-01T18:13:38Z" finished-at="2020-03-01T18:13:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="245410" started-at="2020-03-01T18:13:44Z" data-provider="MarketConfig" finished-at="2020-03-01T18:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Quotes Call Packs is not Displaying: lists don't have the same size expected [63] but found [62]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Quotes Call Packs is not Displaying: lists don't have the same size expected [63] but found [62]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:819)
at POM.AutoRefillPage.AutoRefill(AutoRefillPage.java:156)
at Pages.AutoRefill.ARPacks(AutoRefill.java:8)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:250)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="970" started-at="2020-03-01T18:17:49Z" finished-at="2020-03-01T18:17:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5433" started-at="2020-03-01T18:17:50Z" finished-at="2020-03-01T18:17:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="195558" started-at="2020-03-01T18:17:56Z" data-provider="MarketConfig" finished-at="2020-03-01T18:21:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ireland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-01T18:21:11Z" finished-at="2020-03-01T18:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5685" started-at="2020-03-01T18:21:12Z" finished-at="2020-03-01T18:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="292080" started-at="2020-03-01T18:21:17Z" data-provider="MarketConfig" finished-at="2020-03-01T18:26:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jamaica]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-01T18:26:10Z" finished-at="2020-03-01T18:26:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5929" started-at="2020-03-01T18:26:10Z" finished-at="2020-03-01T18:26:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="316070" started-at="2020-03-01T18:26:16Z" data-provider="MarketConfig" finished-at="2020-03-01T18:31:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FranÃ§ais]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-01T18:31:32Z" finished-at="2020-03-01T18:31:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6208" started-at="2020-03-01T18:31:33Z" finished-at="2020-03-01T18:31:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="303827" started-at="2020-03-01T18:31:39Z" data-provider="MarketConfig" finished-at="2020-03-01T18:36:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="657" started-at="2020-03-01T18:36:43Z" finished-at="2020-03-01T18:36:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5939" started-at="2020-03-01T18:36:43Z" finished-at="2020-03-01T18:36:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="313513" started-at="2020-03-01T18:36:49Z" data-provider="MarketConfig" finished-at="2020-03-01T18:42:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Luxembourg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="656" started-at="2020-03-01T18:42:03Z" finished-at="2020-03-01T18:42:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6544" started-at="2020-03-01T18:42:04Z" finished-at="2020-03-01T18:42:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="196736" started-at="2020-03-01T18:42:10Z" data-provider="MarketConfig" finished-at="2020-03-01T18:45:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mexico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major MXBank expected [SEVEN_ELEVEN] but found [7-ELEVEN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major MXBank expected [SEVEN_ELEVEN] but found [7-ELEVEN]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:523)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="927" started-at="2020-03-01T18:45:27Z" finished-at="2020-03-01T18:45:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5471" started-at="2020-03-01T18:45:28Z" finished-at="2020-03-01T18:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="304774" started-at="2020-03-01T18:45:33Z" data-provider="MarketConfig" finished-at="2020-03-01T18:50:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-01T18:50:38Z" finished-at="2020-03-01T18:50:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5532" started-at="2020-03-01T18:50:39Z" finished-at="2020-03-01T18:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="344541" started-at="2020-03-01T18:50:44Z" data-provider="MarketConfig" finished-at="2020-03-01T18:56:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dutch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-01T18:56:29Z" finished-at="2020-03-01T18:56:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6510" started-at="2020-03-01T18:56:29Z" finished-at="2020-03-01T18:56:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="192460" started-at="2020-03-01T18:56:36Z" data-provider="MarketConfig" finished-at="2020-03-01T18:59:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-01T18:59:48Z" finished-at="2020-03-01T18:59:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6698" started-at="2020-03-01T18:59:49Z" finished-at="2020-03-01T18:59:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="109039" started-at="2020-03-01T18:59:56Z" data-provider="MarketConfig" finished-at="2020-03-01T19:01:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NoPack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-01T19:01:45Z" finished-at="2020-03-01T19:01:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6416" started-at="2020-03-01T19:01:45Z" finished-at="2020-03-01T19:01:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="189010" started-at="2020-03-01T19:01:52Z" data-provider="MarketConfig" finished-at="2020-03-01T19:05:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Norway]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Norwegian]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="642" started-at="2020-03-01T19:05:01Z" finished-at="2020-03-01T19:05:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6206" started-at="2020-03-01T19:05:01Z" finished-at="2020-03-01T19:05:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="200086" started-at="2020-03-01T19:05:08Z" data-provider="MarketConfig" finished-at="2020-03-01T19:08:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Poland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-01T19:08:28Z" finished-at="2020-03-01T19:08:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5971" started-at="2020-03-01T19:08:28Z" finished-at="2020-03-01T19:08:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="198245" started-at="2020-03-01T19:08:34Z" data-provider="MarketConfig" finished-at="2020-03-01T19:11:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Poland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Polish]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-01T19:11:53Z" finished-at="2020-03-01T19:11:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5630" started-at="2020-03-01T19:11:53Z" finished-at="2020-03-01T19:11:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="243800" started-at="2020-03-01T19:11:59Z" data-provider="MarketConfig" finished-at="2020-03-01T19:16:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-01T19:16:03Z" finished-at="2020-03-01T19:16:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5714" started-at="2020-03-01T19:16:03Z" finished-at="2020-03-01T19:16:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="243345" started-at="2020-03-01T19:16:09Z" data-provider="MarketConfig" finished-at="2020-03-01T19:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Puerto Rico]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-01T19:20:12Z" finished-at="2020-03-01T19:20:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5592" started-at="2020-03-01T19:20:13Z" finished-at="2020-03-01T19:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="240405" started-at="2020-03-01T19:20:19Z" data-provider="MarketConfig" finished-at="2020-03-01T19:24:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sweden]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Svenska]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major AR Total Price is Wrong expected [811.59] but found [803.57]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major AR Total Price is Wrong expected [811.59] but found [803.57]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:748)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:253)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="986" started-at="2020-03-01T19:24:19Z" finished-at="2020-03-01T19:24:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6215" started-at="2020-03-01T19:24:20Z" finished-at="2020-03-01T19:24:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="269418" started-at="2020-03-01T19:24:26Z" data-provider="MarketConfig" finished-at="2020-03-01T19:28:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sweden]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="642" started-at="2020-03-01T19:28:56Z" finished-at="2020-03-01T19:28:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="7525" started-at="2020-03-01T19:28:56Z" finished-at="2020-03-01T19:29:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="214394" started-at="2020-03-01T19:29:04Z" data-provider="MarketConfig" finished-at="2020-03-01T19:32:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deutsch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Ship Method Type expected [[Economy, WillCall]] but found [[Economy]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Ship Method Type expected [[Economy, WillCall]] but found [[Economy]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.PaymentPage.PaymentDetails(PaymentPage.java:419)
at Pages.Payment.PaymentDetails(Payment.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:252)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="956" started-at="2020-03-01T19:32:38Z" finished-at="2020-03-01T19:32:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6650" started-at="2020-03-01T19:32:39Z" finished-at="2020-03-01T19:32:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="221082" started-at="2020-03-01T19:32:46Z" data-provider="MarketConfig" finished-at="2020-03-01T19:36:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Ship Method Type expected [[Economy, WillCall]] but found [[Economy]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Ship Method Type expected [[Economy, WillCall]] but found [[Economy]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.PaymentPage.PaymentDetails(PaymentPage.java:419)
at Pages.Payment.PaymentDetails(Payment.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:252)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="947" started-at="2020-03-01T19:36:27Z" finished-at="2020-03-01T19:36:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6745" started-at="2020-03-01T19:36:28Z" finished-at="2020-03-01T19:36:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="215772" started-at="2020-03-01T19:36:35Z" data-provider="MarketConfig" finished-at="2020-03-01T19:40:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FranÃ§ais]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Ship Method Type expected [[Economy, WillCall]] but found [[Economy]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Ship Method Type expected [[Economy, WillCall]] but found [[Economy]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.PaymentPage.PaymentDetails(PaymentPage.java:419)
at Pages.Payment.PaymentDetails(Payment.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:252)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="957" started-at="2020-03-01T19:40:10Z" finished-at="2020-03-01T19:40:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6191" started-at="2020-03-01T19:40:11Z" finished-at="2020-03-01T19:40:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="218070" started-at="2020-03-01T19:40:17Z" data-provider="MarketConfig" finished-at="2020-03-01T19:43:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Italiano]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Ship Method Type expected [[Economy, WillCall]] but found [[Economy]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Ship Method Type expected [[Economy, WillCall]] but found [[Economy]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.PaymentPage.PaymentDetails(PaymentPage.java:419)
at Pages.Payment.PaymentDetails(Payment.java:14)
at Tests.FranchisePartner.Enroll(FranchisePartner.java:252)
at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="946" started-at="2020-03-01T19:43:56Z" finished-at="2020-03-01T19:43:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=FAILURE method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6679" started-at="2020-03-01T19:43:57Z" finished-at="2020-03-01T19:44:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="320750" started-at="2020-03-01T19:44:03Z" data-provider="MarketConfig" finished-at="2020-03-01T19:49:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="641" started-at="2020-03-01T19:49:24Z" finished-at="2020-03-01T19:49:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="7402" started-at="2020-03-01T19:49:25Z" finished-at="2020-03-01T19:49:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="319307" started-at="2020-03-01T19:49:32Z" data-provider="MarketConfig" finished-at="2020-03-01T19:54:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spain]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-01T19:54:51Z" finished-at="2020-03-01T19:54:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6370" started-at="2020-03-01T19:54:52Z" finished-at="2020-03-01T19:54:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="308472" started-at="2020-03-01T19:54:58Z" data-provider="MarketConfig" finished-at="2020-03-01T20:00:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-01T20:00:07Z" finished-at="2020-03-01T20:00:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5796" started-at="2020-03-01T20:00:07Z" finished-at="2020-03-01T20:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="301345" started-at="2020-03-01T20:00:13Z" data-provider="MarketConfig" finished-at="2020-03-01T20:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="657" started-at="2020-03-01T20:05:15Z" finished-at="2020-03-01T20:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="8227" started-at="2020-03-01T20:05:15Z" finished-at="2020-03-01T20:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="192369" started-at="2020-03-01T20:05:23Z" data-provider="MarketConfig" finished-at="2020-03-01T20:08:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukraine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="656" started-at="2020-03-01T20:08:36Z" finished-at="2020-03-01T20:08:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="6441" started-at="2020-03-01T20:08:36Z" finished-at="2020-03-01T20:08:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="192980" started-at="2020-03-01T20:08:43Z" data-provider="MarketConfig" finished-at="2020-03-01T20:11:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukraine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[???????]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="640" started-at="2020-03-01T20:11:56Z" finished-at="2020-03-01T20:11:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PreConditon" is-config="true" duration-ms="5722" started-at="2020-03-01T20:11:57Z" finished-at="2020-03-01T20:12:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="PASS" signature="Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="Enroll" duration-ms="321936" started-at="2020-03-01T20:12:02Z" data-provider="MarketConfig" finished-at="2020-03-01T20:17:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United Kingdom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Enroll -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="PostCondition" is-config="true" duration-ms="625" started-at="2020-03-01T20:17:24Z" finished-at="2020-03-01T20:17:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Enroll status=SUCCESS method=FranchisePartner.Enroll(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.FranchisePartner@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:Tests.FranchisePartner@14acaea5]" name="afterSuite" is-config="true" duration-ms="3922" started-at="2020-03-01T21:35:40Z" finished-at="2020-03-01T21:35:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Tests.FranchisePartner -->
      <class name="Tests.HealthCareProducts">
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PreConditon" is-config="true" duration-ms="6126" started-at="2020-03-01T21:23:36Z" finished-at="2020-03-01T21:23:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PassReferralID" duration-ms="218784" started-at="2020-03-01T21:23:42Z" data-provider="MarketConfig" finished-at="2020-03-01T21:27:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [US] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [US] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:1011)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PostCondition" is-config="true" duration-ms="939" started-at="2020-03-01T21:27:21Z" finished-at="2020-03-01T21:27:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PreConditon" is-config="true" duration-ms="5932" started-at="2020-03-01T21:27:21Z" finished-at="2020-03-01T21:27:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PassReferralID" duration-ms="187318" started-at="2020-03-01T21:27:27Z" data-provider="MarketConfig" finished-at="2020-03-01T21:30:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EspaÃ±ol]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [US] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [US] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:1011)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PostCondition" is-config="true" duration-ms="912" started-at="2020-03-01T21:30:35Z" finished-at="2020-03-01T21:30:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PreConditon" is-config="true" duration-ms="6153" started-at="2020-03-01T21:30:36Z" finished-at="2020-03-01T21:30:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PassReferralID" duration-ms="152867" started-at="2020-03-01T21:30:42Z" data-provider="MarketConfig" finished-at="2020-03-01T21:33:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[English]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Major Market expected [CA] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Major Market expected [CA] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:1011)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PostCondition" is-config="true" duration-ms="953" started-at="2020-03-01T21:33:15Z" finished-at="2020-03-01T21:33:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
        <test-method status="PASS" signature="PreConditon()[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PreConditon" is-config="true" duration-ms="6519" started-at="2020-03-01T21:33:16Z" finished-at="2020-03-01T21:33:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreConditon -->
        <test-method status="FAIL" signature="PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PassReferralID" duration-ms="136366" started-at="2020-03-01T21:33:22Z" data-provider="MarketConfig" finished-at="2020-03-01T21:35:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FranÃ§ais]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Pack]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Minor Summary Labels is Displaying expected [[RÃ©sumÃ© d'inscription, ParamÃ¨tres d'inscription, conjoint, Ã Propos de Vous, Votre Adresse de livraison/Adresse principale, Votre Adresse de Facturation, Votre conditions de vente, Termes et Conditions, RÃ©sumÃ©]] but found [[des informations de carte de crÃ©dit, Votre Adresse de Facturation, Adresse de livraison/Adresse principale, mÃ©thode d'expÃ©dition, RÃ©sumÃ©]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Minor Summary Labels is Displaying expected [[RÃ©sumÃ© d'inscription, ParamÃ¨tres d'inscription, conjoint, Ã Propos de Vous, Votre Adresse de livraison/Adresse principale, Votre Adresse de Facturation, Votre conditions de vente, Termes et Conditions, RÃ©sumÃ©]] but found [[des informations de carte de crÃ©dit, Votre Adresse de Facturation, Adresse de livraison/Adresse principale, mÃ©thode d'expÃ©dition, RÃ©sumÃ©]]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at POM.SummaryPage.OrderSubmit(SummaryPage.java:395)
at Pages.Summary.SummaryDetails(Summary.java:14)
at Tests.HealthCareProducts.PassReferralID(HealthCareProducts.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassReferralID -->
        <test-method status="PASS" signature="PostCondition(org.testng.ITestResult)[pri:0, instance:Tests.HealthCareProducts@4501b7af]" name="PostCondition" is-config="true" duration-ms="963" started-at="2020-03-01T21:35:39Z" finished-at="2020-03-01T21:35:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PassReferralID status=FAILURE method=HealthCareProducts.PassReferralID(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Tests.HealthCareProducts@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostCondition -->
      </class> <!-- Tests.HealthCareProducts -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
